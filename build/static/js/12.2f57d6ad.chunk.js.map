{"version":3,"sources":["../node_modules/device-detector-js/dist/utils/user-agent.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/device-detector-js/dist/utils/variable-replacement.js","../node_modules/device-detector-js/dist/utils/version.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/device-detector-js/dist/parsers/client/browser.js","../node_modules/device-detector-js/dist/utils/model.js","../node_modules/device-detector-js/dist/index.js","../node_modules/device-detector-js/dist/parsers/client/index.js","../node_modules/device-detector-js/dist/utils/trim.js","../node_modules/device-detector-js/dist/utils/memory-cache.js","../node_modules/device-detector-js/dist/parsers/client/mobile-apps.js","../node_modules/device-detector-js/dist/parsers/client/feed-readers.js","../node_modules/device-detector-js/dist/parsers/client/libraries.js","../node_modules/device-detector-js/dist/parsers/client/media-players.js","../node_modules/device-detector-js/dist/parsers/client/personal-information-managers.js","../node_modules/device-detector-js/dist/parsers/device/index.js","../node_modules/device-detector-js/dist/parsers/device/cameras.js","../node_modules/device-detector-js/dist/parsers/device/mobiles.js","../node_modules/device-detector-js/dist/parsers/device/televisions.js","../node_modules/device-detector-js/dist/parsers/device/cars.js","../node_modules/device-detector-js/dist/parsers/device/consoles.js","../node_modules/device-detector-js/dist/parsers/device/portable-media-players.js","../node_modules/device-detector-js/dist/parsers/operating-system/index.js","../node_modules/device-detector-js/dist/parsers/vendor-fragment/index.js","../node_modules/device-detector-js/dist/parsers/bot/index.js","../node_modules/device-detector-js/dist/utils/version-compare.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js"],"names":["Object","defineProperty","exports","value","cache","require","memoryCache","userAgentParser","rawRegex","userAgent","match","cachedRegexInstance","get","regexInstance","RegExp","set","getRegexInstance","exec","slice","_a","arrayWithHoles","iterableToArrayLimit","nonIterableRest","module","arr","i","variableReplacement","template","variables","regex","replace","index","parseInt","substr","trim_1","formatVersion","version","versionTruncation","undefined","versionString","trim","versionParts","split","test","join","Number","isInteger","parseFloat","toFixed","length","parseBrowserEngineVersion","engine","pop","Array","isArray","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","_s","_i","next","done","push","err","TypeError","version_1","variable_replacement_1","user_agent_1","browsers","browserEngines","availableBrowsers","mobileOnlyBrowsers","BrowserParser","options","this","parse","result","type","name","engineVersion","browser","vrpVersion","shortVersion","default","versions","sortedEngineVersions","entries","sort","a","b","versionThreshold","engineByVersion","browserEngine","assign","getBrowserShortName","browserName","shortName","isMobileOnlyBrowser","includes","buildModel","model","__importDefault","mod","__esModule","client_1","device_1","operating_system_1","vendor_fragment_1","browser_1","BotParser","version_compare_1","skipBotDetection","_b","_c","_f","_g","_h","_j","_k","_l","_m","_o","_p","client","clientParser","os","operatingSystemParser","device","deviceParser","bot","botParser","osName","osVersion","osFamily","getOsFamily","brand","vendorFragmentParser","createDeviceObject","hasAndroidTabletFragment","hasAndroidMobileFragment","versionCompare","isToucheEnabled","isDesktop","usesMobileBrowser","getDesktopOsArray","mobile_apps_1","feed_readers_1","libraries_1","media_players_1","personal_information_managers_1","clientParsers","Parser","str","char","memoryCacheBucket","key","hasOwnProperty","mobileApps","mobileApp","feedReaders","url","feedReader","libraries","library","mediaPlayers","mediaPlayer","personalInformationManagers","personalInformationManager","cameras_1","mobiles_1","televisions_1","cars_1","consoles_1","portable_media_players_1","deviceParsers","cameras","camera","models","modelMatch","model_1","mobiles","mobile","televisions","isHbbTv","television","cars","car","consoles","gameConsole","portableMediaPlayers","portableMediaPlayer","operatingSystems","desktopOsArray","shortOsNames","osFamilies","OperatingSystemParser","platform","parsePlatform","operatingSystem","osShortName","getOsShortName","vendorFragments","vendorFragment","bots","category","producer","v1","v2","operator","x","compare","vm","prepVersion","v","numVersion","isNaN","Math","max","GridColumn","props","children","className","computer","color","floated","largeScreen","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","cx","useKeyOnly","useMultipleProp","useTextAlignProp","useValueAndKey","useVerticalAlignProp","useWidthProp","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","handledProps","propTypes","create","createShorthandFactory","GridRow","centered","columns","divided","reversed","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","useKeyOrValueAndKey","Column","Row"],"mappings":"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","file":"static/js/12.2f57d6ad.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst memory_cache_1 = require(\"./memory-cache\");\nconst cache = memory_cache_1.memoryCache();\nconst getRegexInstance = (rawRegex) => {\n    const cachedRegexInstance = cache.get(rawRegex);\n    if (cachedRegexInstance)\n        return cachedRegexInstance.value;\n    const regexInstance = RegExp(`(?:^|[^A-Z0-9-_]|[^A-Z0-9-]_|sprd-)(?:${rawRegex})`, \"i\");\n    cache.set(rawRegex, {\n        value: regexInstance\n    });\n    return regexInstance;\n};\nexports.userAgentParser = (rawRegex, userAgent) => {\n    // TODO: find out why it fails in some browsers\n    try {\n        const regexInstance = getRegexInstance(rawRegex);\n        const match = regexInstance.exec(userAgent);\n        return match ? match.slice(1) : null;\n    }\n    catch (_a) {\n        return null;\n    }\n};\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.variableReplacement = (template, variables) => {\n    const regex = new RegExp(`\\\\$\\\\d`, \"g\");\n    if (template === null)\n        return \"\";\n    return template.replace(regex, (match) => {\n        const index = parseInt(match.substr(1), 10);\n        const variable = variables[index - 1];\n        return variable || \"\";\n    });\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst trim_1 = require(\"./trim\");\nexports.formatVersion = (version, versionTruncation) => {\n    if (version === undefined)\n        return \"\";\n    const versionString = trim_1.trim(version, \". \").replace(new RegExp(\"_\", \"g\"), \".\");\n    const versionParts = versionString.split(\".\");\n    // Return if the string is not only digits once we removed the dots\n    if (!/^\\d+$/.test(versionParts.join(\"\"))) {\n        return versionString;\n    }\n    if (versionTruncation !== 0) {\n        if (Number.isInteger(parseFloat(versionString))) {\n            return parseInt(versionString, 10).toFixed(1);\n        }\n    }\n    if (versionParts.length > 1) {\n        if (versionTruncation !== null) {\n            return versionParts.slice(0, versionTruncation + 1).join(\".\");\n        }\n    }\n    return versionString;\n};\nexports.parseBrowserEngineVersion = (userAgent, engine) => {\n    if (!engine)\n        return \"\";\n    const regex = new RegExp(`${engine}\\\\s*\\\\/?\\\\s*((?:(?=\\\\d+\\\\.\\\\d)\\\\d+[.\\\\d]*|\\\\d{1,7}(?=(?:\\\\D|$))))`, \"i\");\n    const match = userAgent.match(regex);\n    if (!match)\n        return \"\";\n    return match.pop();\n};\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst browsers = require(\"../../../fixtures/regexes/client/browsers.json\");\nconst browserEngines = require(\"../../../fixtures/regexes/client/browser_engine.json\");\nconst availableBrowsers = { \"36\": \"360 Phone Browser\", \"3B\": \"360 Browser\", \"AA\": \"Avant Browser\", \"AB\": \"ABrowse\", \"AF\": \"ANT Fresco\", \"AG\": \"ANTGalio\", \"AL\": \"Aloha Browser\", \"AM\": \"Amaya\", \"AO\": \"Amigo\", \"AN\": \"Android Browser\", \"AR\": \"Arora\", \"AV\": \"Amiga Voyager\", \"AW\": \"Amiga Aweb\", \"AT\": \"Atomic Web Browser\", \"AS\": \"Avast Secure Browser\", \"BB\": \"BlackBerry Browser\", \"BD\": \"Baidu Browser\", \"BS\": \"Baidu Spark\", \"BE\": \"Beonex\", \"BJ\": \"Bunjalloo\", \"BL\": \"B-Line\", \"BR\": \"Brave\", \"BK\": \"BriskBard\", \"BX\": \"BrowseX\", \"CA\": \"Camino\", \"CC\": \"Coc Coc\", \"CD\": \"Comodo Dragon\", \"C1\": \"Coast\", \"CX\": \"Charon\", \"CF\": \"Chrome Frame\", \"HC\": \"Headless Chrome\", \"CH\": \"Chrome\", \"CI\": \"Chrome Mobile iOS\", \"CK\": \"Conkeror\", \"CM\": \"Chrome Mobile\", \"CN\": \"CoolNovo\", \"CO\": \"CometBird\", \"CP\": \"ChromePlus\", \"CR\": \"Chromium\", \"CY\": \"Cyberfox\", \"CS\": \"Cheshire\", \"CU\": \"Cunaguaro\", \"DB\": \"dbrowser\", \"DE\": \"Deepnet Explorer\", \"DF\": \"Dolphin\", \"DO\": \"Dorado\", \"DL\": \"Dooble\", \"DI\": \"Dillo\", \"EI\": \"Epic\", \"EL\": \"Elinks\", \"EB\": \"Element Browser\", \"EP\": \"GNOME Web\", \"ES\": \"Espial TV Browser\", \"FB\": \"Firebird\", \"FD\": \"Fluid\", \"FE\": \"Fennec\", \"FF\": \"Firefox\", \"FK\": \"Firefox Focus\", \"FL\": \"Flock\", \"FM\": \"Firefox Mobile\", \"FW\": \"Fireweb\", \"FN\": \"Fireweb Navigator\", \"GA\": \"Galeon\", \"GE\": \"Google Earth\", \"HJ\": \"HotJava\", \"IA\": \"Iceape\", \"IB\": \"IBrowse\", \"IC\": \"iCab\", \"I2\": \"iCab Mobile\", \"I1\": \"Iridium\", \"ID\": \"IceDragon\", \"IV\": \"Isivioo\", \"IW\": \"Iceweasel\", \"IE\": \"Internet Explorer\", \"IM\": \"IE Mobile\", \"IR\": \"Iron\", \"JS\": \"Jasmine\", \"JI\": \"Jig Browser\", \"KI\": \"Kindle Browser\", \"KM\": \"K-meleon\", \"KO\": \"Konqueror\", \"KP\": \"Kapiko\", \"KY\": \"Kylo\", \"KZ\": \"Kazehakase\", \"LB\": \"Liebao\", \"LG\": \"LG Browser\", \"LI\": \"Links\", \"LU\": \"LuaKit\", \"LS\": \"Lunascape\", \"LX\": \"Lynx\", \"MB\": \"MicroB\", \"MC\": \"NCSA Mosaic\", \"ME\": \"Mercury\", \"MF\": \"Mobile Safari\", \"MI\": \"Midori\", \"MU\": \"MIUI Browser\", \"MS\": \"Mobile Silk\", \"MX\": \"Maxthon\", \"NB\": \"Nokia Browser\", \"NO\": \"Nokia OSS Browser\", \"NV\": \"Nokia Ovi Browser\", \"NE\": \"NetSurf\", \"NF\": \"NetFront\", \"NL\": \"NetFront Life\", \"NP\": \"NetPositive\", \"NS\": \"Netscape\", \"NT\": \"NTENT Browser\", \"OB\": \"Obigo\", \"OD\": \"Odyssey Web Browser\", \"OF\": \"Off By One\", \"OE\": \"ONE Browser\", \"OI\": \"Opera Mini\", \"OM\": \"Opera Mobile\", \"OP\": \"Opera\", \"ON\": \"Opera Next\", \"OO\": \"Opera Touch\", \"OR\": \"Oregano\", \"OV\": \"Openwave Mobile Browser\", \"OW\": \"OmniWeb\", \"OT\": \"Otter Browser\", \"PL\": \"Palm Blazer\", \"PM\": \"Pale Moon\", \"PP\": \"Oppo Browser\", \"PR\": \"Palm Pre\", \"PU\": \"Puffin\", \"PW\": \"Palm WebPro\", \"PA\": \"Palmscape\", \"PX\": \"Phoenix\", \"PO\": \"Polaris\", \"PT\": \"Polarity\", \"PS\": \"Microsoft Edge\", \"QQ\": \"QQ Browser\", \"QT\": \"Qutebrowser\", \"QZ\": \"QupZilla\", \"RK\": \"Rekonq\", \"RM\": \"RockMelt\", \"SB\": \"Samsung Browser\", \"SA\": \"Sailfish Browser\", \"SC\": \"SEMC-Browser\", \"SE\": \"Sogou Explorer\", \"SF\": \"Safari\", \"SH\": \"Shiira\", \"SK\": \"Skyfire\", \"SS\": \"Seraphic Sraf\", \"SL\": \"Sleipnir\", \"SM\": \"SeaMonkey\", \"SN\": \"Snowshoe\", \"SR\": \"Sunrise\", \"SP\": \"SuperBird\", \"ST\": \"Streamy\", \"SX\": \"Swiftfox\", \"TZ\": \"Tizen Browser\", \"TS\": \"TweakStyle\", \"UC\": \"UC Browser\", \"VI\": \"Vivaldi\", \"VB\": \"Vision Mobile Browser\", \"WE\": \"WebPositive\", \"WF\": \"Waterfox\", \"WO\": \"wOSBrowser\", \"WT\": \"WeTab Browser\", \"YA\": \"Yandex Browser\", \"XI\": \"Xiino\" };\nconst mobileOnlyBrowsers = [\"36\", \"PU\", \"SK\", \"MF\", \"OI\", \"OM\", \"DB\", \"ST\", \"BL\", \"IV\", \"FM\", \"C1\", \"AL\", \"SA\"];\nclass BrowserParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\",\n                engine: \"\",\n                engineVersion: \"\"\n            };\n            for (const browser of browsers) {\n                const match = user_agent_1.userAgentParser(browser.regex, userAgent);\n                if (!match)\n                    continue;\n                const vrpVersion = variable_replacement_1.variableReplacement(browser.version, match);\n                const version = version_1.formatVersion(vrpVersion, this.options.versionTruncation);\n                const shortVersion = version && parseFloat(version_1.formatVersion(vrpVersion, 1)) || \"\";\n                if (browser.engine) {\n                    result.engine = browser.engine.default;\n                    if (browser.engine && browser.engine.versions && shortVersion) {\n                        const sortedEngineVersions = Object.entries(browser.engine.versions).sort((a, b) => {\n                            return parseFloat(a[0]) > parseFloat(b[0]) ? 1 : -1;\n                        });\n                        for (const [versionThreshold, engineByVersion] of sortedEngineVersions) {\n                            if (parseFloat(versionThreshold) <= shortVersion) {\n                                result.engine = engineByVersion;\n                            }\n                        }\n                    }\n                }\n                result.type = \"browser\";\n                result.name = variable_replacement_1.variableReplacement(browser.name, match);\n                result.version = version;\n                break;\n            }\n            if (!result.engine) {\n                for (const browserEngine of browserEngines) {\n                    const match = RegExp(browserEngine.regex, \"i\").exec(userAgent);\n                    if (!match)\n                        continue;\n                    result.engine = browserEngine.name;\n                    break;\n                }\n            }\n            result.engineVersion = version_1.formatVersion(version_1.parseBrowserEngineVersion(userAgent, result.engine), this.options.versionTruncation);\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = BrowserParser;\nBrowserParser.getBrowserShortName = (browserName) => {\n    for (const [shortName, name] of Object.entries(availableBrowsers)) {\n        if (name === browserName) {\n            return shortName;\n        }\n    }\n    return \"\";\n};\nBrowserParser.isMobileOnlyBrowser = (browserName) => {\n    return mobileOnlyBrowsers.includes(BrowserParser.getBrowserShortName(browserName));\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildModel = (model) => {\n    model = model.replace(/_/g, \" \");\n    model = model.replace(RegExp(\" TD$\", \"i\"), \"\");\n    if (model === \"Build\")\n        return \"\";\n    return model;\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst client_1 = __importDefault(require(\"./parsers/client\"));\nconst device_1 = __importDefault(require(\"./parsers/device\"));\nconst operating_system_1 = __importDefault(require(\"./parsers/operating-system\"));\nconst vendor_fragment_1 = __importDefault(require(\"./parsers/vendor-fragment\"));\nconst browser_1 = __importDefault(require(\"./parsers/client/browser\"));\nconst BotParser = require(\"./parsers/bot\");\nconst user_agent_1 = require(\"./utils/user-agent\");\nconst version_compare_1 = require(\"./utils/version-compare\");\nclass DeviceDetector {\n    constructor(options) {\n        // Default options\n        this.options = {\n            skipBotDetection: false,\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n            const result = {\n                client: this.clientParser.parse(userAgent),\n                os: this.operatingSystemParser.parse(userAgent),\n                device: this.deviceParser.parse(userAgent),\n                bot: this.options.skipBotDetection ? null : this.botParser.parse(userAgent)\n            };\n            const osName = (_a = result.os) === null || _a === void 0 ? void 0 : _a.name;\n            const osVersion = (_b = result.os) === null || _b === void 0 ? void 0 : _b.version;\n            const osFamily = operating_system_1.default.getOsFamily(osName || \"\");\n            if (!((_c = result.device) === null || _c === void 0 ? void 0 : _c.brand)) {\n                const brand = this.vendorFragmentParser.parse(userAgent);\n                if (brand) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.brand = brand;\n                }\n            }\n            /**\n             * Assume all devices running iOS / Mac OS are from Apple\n             */\n            if (!((_d = result.device) === null || _d === void 0 ? void 0 : _d.brand) && [\"Apple TV\", \"iOS\", \"Mac\"].includes(osName || \"\")) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.brand = \"Apple\";\n            }\n            /**\n             * Chrome on Android passes the device type based on the keyword 'Mobile'\n             * If it is present the device should be a smartphone, otherwise it's a tablet\n             * See https://developer.chrome.com/multidevice/user-agent#chrome_for_android_user_agent\n             */\n            if (!((_e = result.device) === null || _e === void 0 ? void 0 : _e.type) && osFamily === \"Android\" && [\"Chrome\", \"Chrome Mobile\"].includes(((_f = result.client) === null || _f === void 0 ? void 0 : _f.name) || \"\")) {\n                if (user_agent_1.userAgentParser(\"Chrome/[.0-9]* Mobile\", userAgent)) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.type = \"smartphone\";\n                }\n                else if (user_agent_1.userAgentParser(\"Chrome/[.0-9]* (?!Mobile)\", userAgent)) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.type = \"tablet\";\n                }\n            }\n            /**\n             * Some user agents simply contain the fragment 'Android; Tablet;' or 'Opera Tablet', so we assume those devices are tablets\n             */\n            if (!((_g = result.device) === null || _g === void 0 ? void 0 : _g.type) && this.hasAndroidTabletFragment(userAgent) || user_agent_1.userAgentParser(\"Opera Tablet\", userAgent)) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"tablet\";\n            }\n            /**\n             * Some user agents simply contain the fragment 'Android; Mobile;', so we assume those devices are smartphones\n             */\n            if (!((_h = result.device) === null || _h === void 0 ? void 0 : _h.type) && this.hasAndroidMobileFragment(userAgent)) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"smartphone\";\n            }\n            /**\n             * Android up to 3.0 was designed for smartphones only. But as 3.0, which was tablet only, was published\n             * too late, there were a bunch of tablets running with 2.x\n             * With 4.0 the two trees were merged and it is for smartphones and tablets\n             *\n             * So were are expecting that all devices running Android < 2 are smartphones\n             * Devices running Android 3.X are tablets. Device type of Android 2.X and 4.X+ are unknown\n             */\n            if (!((_j = result.device) === null || _j === void 0 ? void 0 : _j.type) && osName === \"Android\" && osVersion !== \"\") {\n                if (version_compare_1.versionCompare(osVersion, \"2.0\") === -1) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.type = \"smartphone\";\n                }\n                else if (version_compare_1.versionCompare(osVersion, \"3.0\") >= 0 && version_compare_1.versionCompare(osVersion, \"4.0\") === -1) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.type = \"tablet\";\n                }\n            }\n            /**\n             * All detected feature phones running android are more likely smartphones\n             */\n            if (result.device && ((_k = result.device) === null || _k === void 0 ? void 0 : _k.type) === \"feature phone\" && osFamily === \"Android\") {\n                result.device.type = \"smartphone\";\n            }\n            /**\n             * According to http://msdn.microsoft.com/en-us/library/ie/hh920767(v=vs.85).aspx\n             * Internet Explorer 10 introduces the \"Touch\" UA string token. If this token is present at the end of the\n             * UA string, the computer has touch capability, and is running Windows 8 (or later).\n             * This UA string will be transmitted on a touch-enabled system running Windows 8 (RT)\n             *\n             * As most touch enabled devices are tablets and only a smaller part are desktops/notebooks we assume that\n             * all Windows 8 touch devices are tablets.\n             */\n            if (!((_l = result.device) === null || _l === void 0 ? void 0 : _l.type)\n                && this.isToucheEnabled(userAgent)\n                && (osName === \"Windows RT\"\n                    || (osName === \"Windows\"\n                        && version_compare_1.versionCompare(osVersion, \"8.0\") >= 0))) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"tablet\";\n            }\n            /**\n             * All devices running Opera TV Store are assumed to be televisions\n             */\n            if (user_agent_1.userAgentParser(\"Opera TV Store\", userAgent)) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"television\";\n            }\n            /**\n             * Devices running Kylo or Espital TV Browsers are assumed to be televisions\n             */\n            if (!((_m = result.device) === null || _m === void 0 ? void 0 : _m.type) && [\"Kylo\", \"Espial TV Browser\"].includes(((_o = result.client) === null || _o === void 0 ? void 0 : _o.name) || \"\")) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"television\";\n            }\n            // set device type to desktop for all devices running a desktop os that were not detected as an other device type\n            if (!((_p = result.device) === null || _p === void 0 ? void 0 : _p.type) && this.isDesktop(result, osFamily)) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"desktop\";\n            }\n            return result;\n        };\n        this.hasAndroidMobileFragment = (userAgent) => {\n            return user_agent_1.userAgentParser(\"Android( [\\.0-9]+)?; Mobile;\", userAgent);\n        };\n        this.hasAndroidTabletFragment = (userAgent) => {\n            return user_agent_1.userAgentParser(\"Android( [\\.0-9]+)?; Tablet;\", userAgent);\n        };\n        this.isDesktop = (result, osFamily) => {\n            if (!result.os) {\n                return false;\n            }\n            // Check for browsers available for mobile devices only\n            if (this.usesMobileBrowser(result.client)) {\n                return false;\n            }\n            return operating_system_1.default.getDesktopOsArray().includes(osFamily);\n        };\n        this.usesMobileBrowser = (client) => {\n            var _a, _b;\n            if (!client)\n                return false;\n            return ((_a = client) === null || _a === void 0 ? void 0 : _a.type) === \"browser\" && browser_1.default.isMobileOnlyBrowser((_b = client) === null || _b === void 0 ? void 0 : _b.name);\n        };\n        this.isToucheEnabled = (userAgent) => {\n            return user_agent_1.userAgentParser(\"Touch\", userAgent);\n        };\n        this.createDeviceObject = () => ({\n            type: \"\",\n            brand: \"\",\n            model: \"\"\n        });\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.clientParser = new client_1.default(this.options);\n        this.deviceParser = new device_1.default();\n        this.operatingSystemParser = new operating_system_1.default(this.options);\n        this.vendorFragmentParser = new vendor_fragment_1.default();\n        this.botParser = new BotParser();\n    }\n}\nmodule.exports = DeviceDetector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst browser_1 = __importDefault(require(\"./browser\"));\nconst mobile_apps_1 = __importDefault(require(\"./mobile-apps\"));\nconst feed_readers_1 = __importDefault(require(\"./feed-readers\"));\nconst libraries_1 = __importDefault(require(\"./libraries\"));\nconst media_players_1 = __importDefault(require(\"./media-players\"));\nconst personal_information_managers_1 = __importDefault(require(\"./personal-information-managers\"));\nconst clientParsers = [\n    feed_readers_1.default,\n    mobile_apps_1.default,\n    media_players_1.default,\n    personal_information_managers_1.default,\n    browser_1.default,\n    libraries_1.default\n];\nclass ClientParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            for (const Parser of clientParsers) {\n                const parser = new Parser(this.options);\n                const client = parser.parse(userAgent);\n                if (client.type !== \"\")\n                    return client;\n            }\n            return null;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = ClientParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trim = (str, char) => {\n    return str.replace(new RegExp(\"^[\" + char + \"]+|[\" + char + \"]+$\", \"g\"), \"\");\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.memoryCache = () => {\n    const memoryCacheBucket = {};\n    const set = (key, value) => {\n        memoryCacheBucket[key] = value;\n    };\n    const get = (key) => {\n        if (memoryCacheBucket.hasOwnProperty(key)) {\n            return memoryCacheBucket[key];\n        }\n    };\n    return {\n        set,\n        get\n    };\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst mobileApps = require(\"../../../fixtures/regexes/client/mobile_apps.json\");\nclass MobileAppParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\"\n            };\n            for (const mobileApp of mobileApps) {\n                const match = user_agent_1.userAgentParser(mobileApp.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"mobile app\";\n                result.name = variable_replacement_1.variableReplacement(mobileApp.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(mobileApp.version, match), this.options.versionTruncation);\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = MobileAppParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst feedReaders = require(\"../../../fixtures/regexes/client/feed_readers.json\");\nclass FeedReaderParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\",\n                url: \"\"\n            };\n            for (const feedReader of feedReaders) {\n                const match = user_agent_1.userAgentParser(feedReader.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"feed reader\";\n                result.name = variable_replacement_1.variableReplacement(feedReader.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(feedReader.version, match), this.options.versionTruncation);\n                result.url = feedReader.url;\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = FeedReaderParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst libraries = require(\"../../../fixtures/regexes/client/libraries.json\");\nclass LibraryParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\",\n                url: \"\"\n            };\n            for (const library of libraries) {\n                const match = user_agent_1.userAgentParser(library.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"library\";\n                result.name = variable_replacement_1.variableReplacement(library.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(library.version, match), this.options.versionTruncation);\n                result.url = library.url || \"\";\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = LibraryParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst mediaPlayers = require(\"../../../fixtures/regexes/client/mediaplayers.json\");\nclass MediaPlayerParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\"\n            };\n            for (const mediaPlayer of mediaPlayers) {\n                const match = user_agent_1.userAgentParser(mediaPlayer.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"media player\";\n                result.name = variable_replacement_1.variableReplacement(mediaPlayer.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(mediaPlayer.version, match), this.options.versionTruncation);\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = MediaPlayerParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst personalInformationManagers = require(\"../../../fixtures/regexes/client/pim.json\");\nclass PersonalInformationManagerParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\"\n            };\n            for (const personalInformationManager of personalInformationManagers) {\n                const match = user_agent_1.userAgentParser(personalInformationManager.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"personal information manager\";\n                result.name = variable_replacement_1.variableReplacement(personalInformationManager.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(personalInformationManager.version, match), this.options.versionTruncation);\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = PersonalInformationManagerParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cameras_1 = __importDefault(require(\"./cameras\"));\nconst mobiles_1 = __importDefault(require(\"./mobiles\"));\nconst televisions_1 = __importDefault(require(\"./televisions\"));\nconst cars_1 = __importDefault(require(\"./cars\"));\nconst consoles_1 = __importDefault(require(\"./consoles\"));\nconst portable_media_players_1 = __importDefault(require(\"./portable-media-players\"));\nconst deviceParsers = [\n    consoles_1.default,\n    cars_1.default,\n    cameras_1.default,\n    televisions_1.default,\n    portable_media_players_1.default,\n    mobiles_1.default\n];\nclass ClientParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            for (const Parser of deviceParsers) {\n                const parser = new Parser();\n                const device = parser.parse(userAgent);\n                if (device.type !== \"\") {\n                    return device;\n                }\n            }\n            return null;\n        };\n    }\n}\nexports.default = ClientParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst cameras = require(\"../../../fixtures/regexes/device/cameras.json\");\nclass CameraParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, camera] of Object.entries(cameras)) {\n                const match = user_agent_1.userAgentParser(camera.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"camera\";\n                result.brand = brand;\n                if (camera.model) {\n                    result.model = variable_replacement_1.variableReplacement(camera.model, match).trim();\n                }\n                else if (camera.models) {\n                    for (const model of camera.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = variable_replacement_1.variableReplacement(model.model, modelMatch).trim();\n                        break;\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = CameraParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst model_1 = require(\"../../utils/model\");\nconst mobiles = require(\"../../../fixtures/regexes/device/mobiles.json\");\nclass MobileParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, mobile] of Object.entries(mobiles)) {\n                const match = user_agent_1.userAgentParser(mobile.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = mobile.device;\n                result.brand = brand;\n                if (mobile.model) {\n                    result.model = model_1.buildModel(variable_replacement_1.variableReplacement(mobile.model, match)).trim();\n                }\n                else if (mobile.models) {\n                    for (const model of mobile.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = model_1.buildModel(variable_replacement_1.variableReplacement(model.model, modelMatch)).trim();\n                        if (model.device) {\n                            result.type = model.device;\n                        }\n                        if (model.brand) {\n                            result.brand = model.brand;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n            // Sanitize device type\n            if (result.type === \"tv\") {\n                result.type = result.type.replace(\"tv\", \"television\");\n            }\n            // Sanitize device brand\n            if (result.brand === \"Unknown\") {\n                result.brand = \"\";\n            }\n            return result;\n        };\n    }\n}\nexports.default = MobileParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst model_1 = require(\"../../utils/model\");\nconst televisions = require(\"../../../fixtures/regexes/device/televisions.json\");\nclass TelevisionParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            if (!this.isHbbTv(userAgent))\n                return result;\n            result.type = \"television\";\n            for (const [brand, television] of Object.entries(televisions)) {\n                const match = user_agent_1.userAgentParser(television.regex, userAgent);\n                if (!match)\n                    continue;\n                result.brand = brand;\n                if (television.model) {\n                    result.model = model_1.buildModel(variable_replacement_1.variableReplacement(television.model, match)).trim();\n                }\n                else if (television.models) {\n                    for (const model of television.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = model_1.buildModel(variable_replacement_1.variableReplacement(model.model, modelMatch)).trim();\n                        break;\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n        this.isHbbTv = (userAgent) => {\n            return user_agent_1.userAgentParser(\"HbbTV\\/([1-9]{1}(?:\\.[0-9]{1}){1,2})\", userAgent);\n        };\n    }\n}\nexports.default = TelevisionParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst cars = require(\"../../../fixtures/regexes/device/car_browsers.json\");\nclass CarParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, car] of Object.entries(cars)) {\n                const match = user_agent_1.userAgentParser(car.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"car\";\n                result.brand = brand;\n                if (car.model) {\n                    result.model = variable_replacement_1.variableReplacement(car.model, match).trim();\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = CarParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst consoles = require(\"../../../fixtures/regexes/device/consoles.json\");\nclass ConsoleParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, gameConsole] of Object.entries(consoles)) {\n                const match = user_agent_1.userAgentParser(gameConsole.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = gameConsole.device;\n                result.brand = brand;\n                if (gameConsole.model) {\n                    result.model = variable_replacement_1.variableReplacement(gameConsole.model, match).trim();\n                }\n                else if (gameConsole.models) {\n                    for (const model of gameConsole.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = variable_replacement_1.variableReplacement(model.model, modelMatch).trim();\n                        break;\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = ConsoleParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst portableMediaPlayers = require(\"../../../fixtures/regexes/device/portable_media_player.json\");\nclass PortableMediaPlayersParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, portableMediaPlayer] of Object.entries(portableMediaPlayers)) {\n                const match = user_agent_1.userAgentParser(portableMediaPlayer.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = portableMediaPlayer.device;\n                result.brand = brand;\n                if (portableMediaPlayer.model) {\n                    result.model = variable_replacement_1.variableReplacement(portableMediaPlayer.model, match).trim();\n                }\n                else if (portableMediaPlayer.models) {\n                    for (const model of portableMediaPlayer.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = variable_replacement_1.variableReplacement(model.model, modelMatch).trim();\n                        break;\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = PortableMediaPlayersParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst operatingSystems = require(\"../../../fixtures/regexes/oss.json\");\nconst desktopOsArray = [\"AmigaOS\", \"IBM\", \"GNU/Linux\", \"Mac\", \"Unix\", \"Windows\", \"BeOS\", \"Chrome OS\"];\nconst shortOsNames = { \"AIX\": \"AIX\", \"AND\": \"Android\", \"AMG\": \"AmigaOS\", \"ATV\": \"Apple TV\", \"ARL\": \"Arch Linux\", \"BTR\": \"BackTrack\", \"SBA\": \"Bada\", \"BEO\": \"BeOS\", \"BLB\": \"BlackBerry OS\", \"QNX\": \"BlackBerry Tablet OS\", \"BMP\": \"Brew\", \"CES\": \"CentOS\", \"COS\": \"Chrome OS\", \"CYN\": \"CyanogenMod\", \"DEB\": \"Debian\", \"DFB\": \"DragonFly\", \"FED\": \"Fedora\", \"FOS\": \"Firefox OS\", \"FIR\": \"Fire OS\", \"BSD\": \"FreeBSD\", \"GNT\": \"Gentoo\", \"GTV\": \"Google TV\", \"HPX\": \"HP-UX\", \"HAI\": \"Haiku OS\", \"IRI\": \"IRIX\", \"INF\": \"Inferno\", \"KOS\": \"KaiOS\", \"KNO\": \"Knoppix\", \"KBT\": \"Kubuntu\", \"LIN\": \"GNU\\/Linux\", \"LBT\": \"Lubuntu\", \"VLN\": \"VectorLinux\", \"MAC\": \"Mac\", \"MAE\": \"Maemo\", \"MDR\": \"Mandriva\", \"SMG\": \"MeeGo\", \"MCD\": \"MocorDroid\", \"MIN\": \"Mint\", \"MLD\": \"MildWild\", \"MOR\": \"MorphOS\", \"NBS\": \"NetBSD\", \"MTK\": \"MTK \\/ Nucleus\", \"WII\": \"Nintendo\", \"NDS\": \"Nintendo Mobile\", \"OS2\": \"OS\\/2\", \"T64\": \"OSF1\", \"OBS\": \"OpenBSD\", \"PSP\": \"PlayStation Portable\", \"PS3\": \"PlayStation\", \"RHT\": \"Red Hat\", \"ROS\": \"RISC OS\", \"REM\": \"Remix OS\", \"RZD\": \"RazoDroiD\", \"SAB\": \"Sabayon\", \"SSE\": \"SUSE\", \"SAF\": \"Sailfish OS\", \"SLW\": \"Slackware\", \"SOS\": \"Solaris\", \"SYL\": \"Syllable\", \"SYM\": \"Symbian\", \"SYS\": \"Symbian OS\", \"S40\": \"Symbian OS Series 40\", \"S60\": \"Symbian OS Series 60\", \"SY3\": \"Symbian^3\", \"TDX\": \"ThreadX\", \"TIZ\": \"Tizen\", \"UBT\": \"Ubuntu\", \"WTV\": \"WebTV\", \"WIN\": \"Windows\", \"WCE\": \"Windows CE\", \"WIO\": \"Windows IoT\", \"WMO\": \"Windows Mobile\", \"WPH\": \"Windows Phone\", \"WRT\": \"Windows RT\", \"XBX\": \"Xbox\", \"XBT\": \"Xubuntu\", \"YNS\": \"YunOs\", \"IOS\": \"iOS\", \"POS\": \"palmOS\", \"WOS\": \"webOS\" };\nconst osFamilies = { \"Android\": [\"AND\", \"CYN\", \"FIR\", \"REM\", \"RZD\", \"MLD\", \"MCD\", \"YNS\"], \"AmigaOS\": [\"AMG\", \"MOR\"], \"Apple TV\": [\"ATV\"], \"BlackBerry\": [\"BLB\", \"QNX\"], \"Brew\": [\"BMP\"], \"BeOS\": [\"BEO\", \"HAI\"], \"Chrome OS\": [\"COS\"], \"Firefox OS\": [\"FOS\", \"KOS\"], \"Gaming Console\": [\"WII\", \"PS3\"], \"Google TV\": [\"GTV\"], \"IBM\": [\"OS2\"], \"iOS\": [\"IOS\"], \"RISC OS\": [\"ROS\"], \"GNU\\/Linux\": [\"LIN\", \"ARL\", \"DEB\", \"KNO\", \"MIN\", \"UBT\", \"KBT\", \"XBT\", \"LBT\", \"FED\", \"RHT\", \"VLN\", \"MDR\", \"GNT\", \"SAB\", \"SLW\", \"SSE\", \"CES\", \"BTR\", \"SAF\"], \"Mac\": [\"MAC\"], \"Mobile Gaming Console\": [\"PSP\", \"NDS\", \"XBX\"], \"Real-time OS\": [\"MTK\", \"TDX\"], \"Other Mobile\": [\"WOS\", \"POS\", \"SBA\", \"TIZ\", \"SMG\", \"MAE\"], \"Symbian\": [\"SYM\", \"SYS\", \"SY3\", \"S60\", \"S40\"], \"Unix\": [\"SOS\", \"AIX\", \"HPX\", \"BSD\", \"NBS\", \"OBS\", \"DFB\", \"SYL\", \"IRI\", \"T64\", \"INF\"], \"WebTV\": [\"WTV\"], \"Windows\": [\"WIN\"], \"Windows Mobile\": [\"WPH\", \"WMO\", \"WCE\", \"WRT\", \"WIO\"] };\nclass OperatingSystemParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                name: \"\",\n                version: \"\",\n                platform: this.parsePlatform(userAgent)\n            };\n            for (const operatingSystem of operatingSystems) {\n                const match = user_agent_1.userAgentParser(operatingSystem.regex, userAgent);\n                if (!match)\n                    continue;\n                result.name = variable_replacement_1.variableReplacement(operatingSystem.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(operatingSystem.version, match), this.options.versionTruncation);\n                if (result.name === \"lubuntu\") {\n                    result.name = \"Lubuntu\";\n                }\n                if (result.name === \"debian\") {\n                    result.name = \"Debian\";\n                }\n                if (result.name === \"YunOS\") {\n                    result.name = \"YunOs\";\n                }\n                return result;\n            }\n            return null;\n        };\n        this.parsePlatform = (userAgent) => {\n            if (user_agent_1.userAgentParser(\"arm\", userAgent)) {\n                return \"ARM\";\n            }\n            if (user_agent_1.userAgentParser(\"WOW64|x64|win64|amd64|x86_64\", userAgent)) {\n                return \"x64\";\n            }\n            if (user_agent_1.userAgentParser(\"i[0-9]86|i86pc\", userAgent)) {\n                return \"x86\";\n            }\n            return \"\";\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = OperatingSystemParser;\nOperatingSystemParser.getDesktopOsArray = () => desktopOsArray;\nOperatingSystemParser.getOsFamily = (osName) => {\n    const osShortName = OperatingSystemParser.getOsShortName(osName);\n    for (const [osFamily, shortNames] of Object.entries(osFamilies)) {\n        if (shortNames.includes(osShortName)) {\n            return osFamily;\n        }\n    }\n    return \"\";\n};\nOperatingSystemParser.getOsShortName = (osName) => {\n    for (const [shortName, name] of Object.entries(shortOsNames)) {\n        if (name === osName)\n            return shortName;\n    }\n    return \"\";\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst vendorFragments = require(\"../../../fixtures/regexes/vendorfragments.json\");\nclass VendorFragmentParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            for (const [brand, vendorFragment] of Object.entries(vendorFragments)) {\n                for (const regex of vendorFragment) {\n                    const match = user_agent_1.userAgentParser(regex, userAgent);\n                    if (!match)\n                        continue;\n                    return brand;\n                }\n            }\n            return \"\";\n        };\n    }\n}\nexports.default = VendorFragmentParser;\n","\"use strict\";\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst bots = require(\"../../../fixtures/regexes/bots.json\");\nclass BotParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            var _a, _b, _c, _d;\n            for (const bot of bots) {\n                const match = user_agent_1.userAgentParser(bot.regex, userAgent);\n                if (!match)\n                    continue;\n                return {\n                    name: bot.name,\n                    category: bot.category || \"\",\n                    url: bot.url || \"\",\n                    producer: {\n                        name: ((_b = (_a = bot) === null || _a === void 0 ? void 0 : _a.producer) === null || _b === void 0 ? void 0 : _b.name) || \"\",\n                        url: ((_d = (_c = bot) === null || _c === void 0 ? void 0 : _c.producer) === null || _d === void 0 ? void 0 : _d.url) || \"\"\n                    }\n                };\n            }\n            return null;\n        };\n    }\n}\nmodule.exports = BotParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.versionCompare = (v1, v2, operator) => {\n    //      discuss at: http://locutus.io/php/version_compare/\n    //      original by: Philippe Jausions (http://pear.php.net/user/jausions)\n    //      original by: Aidan Lister (http://aidanlister.com/)\n    //      reimplemented by: Kankrelune (http://www.webfaktory.info/)\n    //      improved by: Brett Zamir (http://brett-zamir.me)\n    //      improved by: Scott Baker\n    //      improved by: Theriault (https://github.com/Theriault)\n    //      example 1: version_compare('8.2.5rc', '8.2.5a')\n    //      returns 1: 1\n    //      example 2: version_compare('8.2.50', '8.2.52', '<')\n    //      returns 2: true\n    //      example 3: version_compare('5.3.0-dev', '5.3.0')\n    //      returns 3: -1\n    //      example 4: version_compare('4.1.0.52','4.01.0.51')\n    //      returns 4: 1\n    // Important: compare must be initialized at 0.\n    let i;\n    let x;\n    let compare = 0;\n    // vm maps textual PHP versions to negatives so they're less than 0.\n    // PHP currently defines these as CASE-SENSITIVE. It is important to\n    // leave these as negatives so that they can come before numerical versions\n    // and as if no letters were there to begin with.\n    // (1alpha is < 1 and < 1.1 but > 1dev1)\n    // If a non-numerical value can't be mapped to this table, it receives\n    // -7 as its value.\n    const vm = {\n        \"dev\": -6,\n        \"alpha\": -5,\n        \"a\": -5,\n        \"beta\": -4,\n        \"b\": -4,\n        \"RC\": -3,\n        \"rc\": -3,\n        \"#\": -2,\n        \"p\": 1,\n        \"pl\": 1\n    };\n    // This function will be called to prepare each version argument.\n    // It replaces every _, -, and + with a dot.\n    // It surrounds any nonsequence of numbers/dots with dots.\n    // It replaces sequences of dots with a single dot.\n    //    version_compare('4..0', '4.0') === 0\n    // Important: A string of 0 length needs to be converted into a value\n    // even less than an unexisting value in vm (-7), hence [-8].\n    // It's also important to not strip spaces because of this.\n    //   version_compare('', ' ') === 1\n    const prepVersion = (v) => {\n        v = (\"\" + v).replace(/[_\\-+]/g, \".\");\n        v = v.replace(/([^.\\d]+)/g, \".$1.\").replace(/\\.{2,}/g, \".\");\n        return (!v.length ? [-8] : v.split(\".\"));\n    };\n    // This converts a version component to a number.\n    // Empty component becomes 0.\n    // Non-numerical component becomes a negative number.\n    // Numerical component becomes itself as an integer.\n    const numVersion = (v) => {\n        return !v ? 0 : (isNaN(v) ? vm[v] || -7 : parseInt(v, 10));\n    };\n    v1 = prepVersion(v1);\n    v2 = prepVersion(v2);\n    x = Math.max(v1.length, v2.length);\n    for (i = 0; i < x; i++) {\n        if (v1[i] === v2[i]) {\n            continue;\n        }\n        v1[i] = numVersion(v1[i]);\n        v2[i] = numVersion(v2[i]);\n        if (v1[i] < v2[i]) {\n            compare = -1;\n            break;\n        }\n        else if (v1[i] > v2[i]) {\n            compare = 1;\n            break;\n        }\n    }\n    if (!operator) {\n        return compare;\n    }\n    // Important: operator is CASE-SENSITIVE.\n    // \"No operator\" seems to be treated as \"<.\"\n    // Any other values seem to make the function return null.\n    switch (operator) {\n        case \">\":\n        case \"gt\":\n            return (compare > 0);\n        case \">=\":\n        case \"ge\":\n            return (compare >= 0);\n        case \"<=\":\n        case \"le\":\n            return (compare <= 0);\n        case \"===\":\n        case \"=\":\n        case \"eq\":\n            return (compare === 0);\n        case \"<>\":\n        case \"!==\":\n        case \"ne\":\n            return (compare !== 0);\n        case \"\":\n        case \"<\":\n        case \"lt\":\n            return (compare < 0);\n        default:\n            return null;\n    }\n};\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;"],"sourceRoot":""}