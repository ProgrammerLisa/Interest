{"version":3,"sources":["utils/request/config.ts","utils/request/index.ts","views/games/Gobang-online.tsx","views/games/ChatRoom.tsx","utils/api/chat.ts"],"names":["config","baseURL","testBaseURL","IP","testIP","fetch","axios","create","timeout","interceptors","request","use","method","data","headers","qs","stringify","error","Promise","reject","response","a","async","code","layer","msg","status","console","log","user","JSON","parse","localStorage","getItem","account","boardRow","boardColumn","Square","props","className","name","onClick","value","Checkerboard","i","type","key","this","square","columnSum","rowSum","num","columns","count","column","rows","row","push","renderSquare","renderRow","Component","Game","socket","ready","emit","beginGame","roomInfo","upperHand","setState","role","otherRole","nextPlayer","selfIsNext","canPlay","reset","state","winner","Array","defensive","handleSocket","setSquare","squareIndex","on","forEach","rule","contentMap","map","sub","join","replace","RegExp","member","calculateWinner","v","Button","inverted","color","hanldClick","userInfo","SearchRoom","search","add","Input","icon","iconPosition","label","tag","content","labelPosition","placeholder","sendValue","onChange","handelChage","errorStatus","React","WebSocket","initSocket","id","io","connectStatus","roomId","inputText","roomName","url","then","res","Date","getTime","e","target"],"mappings":"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","file":"static/js/13.88dd4dd9.chunk.js","sourcesContent":["export const config = {\n  baseURL: 'http://111.229.226.139:9277',\n  testBaseURL: 'http://localhost:9277',\n  IP: '111.229.226.139:9277',\n  testIP: 'localhost:9277'\n}","import axios from 'axios'\nimport qs from 'qs'\nimport { config } from './config'\nlet fetch = axios.create({\n  baseURL: config.baseURL,\n  timeout: 30000\n})\n\nfetch.interceptors.request.use(config => {\n  if (config.method === 'post' || config.method === 'put' || config.method === 'delete') {\n    if (typeof(config.data) !== 'string' && config.headers['Content-Type'] !== 'multipart/form-data') {\n      config.data = qs.stringify(config.data)\n    }\n  }\n  return config\n}, error => {\n  Promise.reject(error)\n})\n\nfetch.interceptors.response.use(async data => {\n  if (data.data.code !== 200) {\n    layer.msg(data.data.msg)\n  }\n  return data.data\n}, error => {\n  if (error.response) {\n    if (error.response.status === 500) {\n      console.log('服务器错误，请联系管理员处理')\n    }\n    return Promise.reject(error.response.data)\n  } else {\n    return Promise.reject(error)\n  }\n})\n\nexport default fetch\n","import React, { Component } from 'react'\nimport { Button } from 'semantic-ui-react'\nimport '../../assets/sass/Gobang.css'\nconst user = JSON.parse((localStorage as any).getItem('kmr_userInfo')).account\n\nconst boardRow = 20\nconst boardColumn = 20\n\ninterface SquareType {\n  [index: number]: string\n}\n\ninterface SquareProps {\n  key: string,\n  name: string,\n  value: string,\n  onClick: () => void\n}\n\nfunction Square(props: SquareProps) {\n  return (\n    <button className={`square ${props.name}`} onClick={() => props.onClick()}>\n      {props.name === 'board-line' ? <span className={`piece ${props.value}`}></span> : ''}\n    </button>\n  )\n}\n\ninterface CheckerboardProps {\n  square: SquareType,\n  onClick: (i: number) => void,\n  column: number,\n  row: number\n}\n\nclass Checkerboard extends Component<CheckerboardProps, {}> {\n  renderSquare(i: number, type: string) {\n    return (\n      <Square key={`square${i}`} name={type} value={this.props.square[i]} onClick={() => {this.props.onClick(i)}} />\n    )\n  }\n  renderRow(type: string, columnSum: number, rowSum: number) {\n    let num = rowSum + 1\n    if (type === 'board-line') num = rowSum\n    let columns = [], count = 0\n    for (let column = 0; column < columnSum + 1; column++) {\n      let rows = []\n      for (let row = 0; row < num; row++) {\n        rows.push(this.renderSquare(count, type))\n        count++\n      }\n      columns.push(<div className=\"board-row\" key={`row${column}`}>{rows}</div>)\n    }\n    return columns\n  }\n  render() {\n    return (\n      <div className=\"board-container\">\n        <div className=\"board-border\"></div>\n        <div className=\"board-foundation-container\">{this.renderRow('', this.props.column, this.props.row)}</div>\n        <div className=\"board-line-container\">{this.renderRow('board-line', this.props.column, this.props.row)}</div>\n      </div>\n    )\n  }\n}\n\ninterface GameProps {\n  socket: any,\n  userInfo: any,\n  roomId: string\n}\ninterface GameState {\n  winner: any,\n  column: number,\n  row: number,\n  square: SquareType,\n  selfIsNext: boolean,\n  role: string,\n  otherRole: string,\n  nextPlayer: string,\n  canPlay: boolean,\n  reset: boolean,\n  upperHand: string,\n  defensive: string\n}\n\nclass Game extends Component<GameProps, GameState> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      winner: null,\n      column: boardColumn,\n      row: boardRow,\n      square: new Array(boardColumn * boardRow),\n      selfIsNext: false,\n      role: '',\n      otherRole: '',\n      nextPlayer: '',\n      canPlay: false,\n      reset: true,\n      upperHand: '',\n      defensive: ''\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    this.handleSocket()\n  }\n\n  ready = () => {\n    this.props.socket.emit('ready', user)\n  }\n\n  beginGame = (roomInfo: any) => {\n    if (user === roomInfo.upperHand) {\n      this.setState({\n        role: 'piece-black',\n        otherRole: 'piece-white',\n        nextPlayer: roomInfo.upperHand,\n        selfIsNext: true,\n        canPlay: true,\n        reset: false,\n        ...roomInfo\n      })\n    } else {\n      this.setState({\n        role: 'piece-white',\n        otherRole: 'piece-black',\n        nextPlayer: roomInfo.upperHand,\n        selfIsNext: false,\n        canPlay: false,\n        reset: false,\n        ...roomInfo\n      })\n    }\n    console.log(this.state)\n  }\n\n  hanldClick (i: number) {\n    const _this = this\n    const socket = this.props.socket\n    if (this.state.canPlay) {\n      this.setSquare(i, false)\n      socket.emit('finish', { nextPlayer: _this.state.nextPlayer, squareIndex: i })\n    }\n  }\n\n  handleSocket() {\n    const socket = this.props.socket\n    socket.on('finish', (data: any) => {\n      this.setSquare(data.squareIndex, true) \n    })\n    socket.on('beginGame', (data: any) => {\n      this.beginGame(data)\n    })\n    socket.on('reset', () => {\n      this.setState({\n        winner: null,\n        column: boardColumn,\n        row: boardRow,\n        square: new Array(boardColumn * boardRow),\n        selfIsNext: false,\n        role:  '',\n        otherRole:  '',\n        nextPlayer:  '',\n        canPlay: false,\n        reset: true,\n        upperHand: '',\n        defensive: ''\n      })\n    })\n  }\n\n  setSquare(i: number, state: boolean) {\n    let square = this.state.square\n    if (square[i]) return\n    square[i] = this.state.selfIsNext ? this.state.role : this.state.otherRole\n    let winner: any = ''\n    if (this.state.winner) {\n      return\n    } else {\n      winner = calculateWinner(square, i, this.state.row)\n      if (winner) {\n        winner.member.forEach((v: number) => {\n          square[v] = 'piece-winner'\n        })\n      } else {\n        let nextPlayer = this.state.nextPlayer === this.state.upperHand ? this.state.defensive : this.state.upperHand\n        this.setState({ nextPlayer: nextPlayer })\n      }\n    }\n    this.setState({\n      winner: winner,\n      reset: winner ? true : false,\n      square: square,\n      canPlay: state,\n      selfIsNext: !this.state.selfIsNext\n    })\n  }\n\n  render() {\n    const winner = this.state.winner\n    let status\n    if (winner) {\n      status = 'winner --- ' + winner.winner\n    } else {\n      this.state.reset ? status = '' : status = '下一步 --- ' + (this.state.nextPlayer === user ? '我' : this.state.nextPlayer)\n    }\n    return (\n      <div>\n        <p>{status}</p>\n        {\n          this.state.reset ?\n          <p className=\"text-center\">\n            <Button inverted color='violet' onClick={this.ready}>进入房间\n              { winner ? '重新开始' : '开始' }\n            </Button>\n          </p> : null\n        }\n        <Checkerboard square={this.state.square} column={this.state.column} row={this.state.row} onClick={(i) => this.hanldClick(i)}></Checkerboard>\n      </div>\n    )\n  }\n}\n\nfunction calculateWinner(square: SquareType, i: number, row: number) {\n  var winnerList = [\n    // 横向连接\n    [i, i + 1, i + 2, i + 3, i + 4],\n    [i - 1, i, i + 1, i + 2, i + 3],\n    [i - 2, i - 1, i, i + 1, i + 2],\n    [i - 3, i - 2, i - 1, i, i + 1],\n    [i - 4, i - 3, i - 2, i - 1, i],\n    // 纵向连接\n    [i, i + row, i + row*2, i + row*3, i + row*4],\n    [i - row, i, i + row, i + row*2, i + row*3],\n    [i - row*2, i - row, i, i + row, i + row*2],\n    [i - row*3, i - row*2, i - row, i, i + row],\n    [i - row*4, i - row*3, i - row*2, i - row, i],\n    // 左上-右下 斜向连接\n    [i, i + row + 1, i + 2*(row + 1), i + (row + 1)*3, i + (row + 1)*4],\n    [i - (row + 1), i, i + row + 1, i + 2*(row + 1), i + (row + 1)*3],\n    [i - (row + 1)*2, i - (row + 1), i, i + row + 1, i + 2*(row + 1)],\n    [i - (row + 1)*3, i - (row + 1)*2, i - (row + 1), i, i + row + 1],\n    [i - (row + 1)*4, i - (row + 1)*3, i - (row + 1)*2, i - (row + 1), i],\n    // 右上-左下 斜向连接\n    [i, i + row - 1, i + 2*(row - 1), i + (row - 1)*3, i + (row - 1)*4],\n    [i - (row - 1), i, i + row - 1, i + 2*(row - 1), i + (row - 1)*3],\n    [i - (row - 1)*2, i - (row - 1), i, i + row - 1, i + 2*(row - 1)],\n    [i - (row - 1)*3, i - (row - 1)*2, i - (row - 1), i, i + row - 1],\n    [i - (row - 1)*4, i - (row - 1)*3, i - (row - 1)*2, i - (row - 1), i]\n  ]\n  let winner = null\n  winnerList.forEach(rule => {\n    let contentMap = rule.map(sub => {\n      return square[sub]\n    })\n    if ((contentMap.join(',') + ',').replace(new RegExp(contentMap[0] + ',', 'gi'), '') === '') {\n      winner =  { winner: square[i], member: rule }\n    }\n  })\n  return winner\n}\n\nexport default Game","import * as React from 'react'\r\nimport io from 'socket.io-client'\r\nimport { Button, Input } from 'semantic-ui-react'\r\nimport { intoRoom, addRoom } from '../../utils/api/chat'\r\nimport { config } from '../../utils/request/config'\r\nimport Gobang from './Gobang-online'\r\n/*\r\nfunction renderMessageBox(props) {\r\n  let box = []\r\n  props.forEach((element, index) => {\r\n    box.push(<p key={`message${index}`}>{element}</p>)\r\n  })\r\n  return <div>{box}</div>\r\n}\r\n*/\r\nvar socket: any\r\nvar userInfo: any = JSON.parse((localStorage as any).getItem('kmr_userInfo'))\r\n\r\ninterface SearchRoomProps {\r\n  search: () => void,\r\n  add: () => void,\r\n  handelChage: (value: any) => void,\r\n  sendValue: string,\r\n  errorStatus: string\r\n}\r\n\r\nclass SearchRoom extends React.Component<SearchRoomProps, {}> {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='flex-between'>\r\n          <Button inverted color='violet' onClick={() => this.props.search()}>进入房间</Button>\r\n          <Button inverted color='purple' onClick={() => this.props.add()}>创建房间</Button>\r\n        </div>\r\n        <Input\r\n          icon='hand point left outline'\r\n          iconPosition='left'\r\n          label={{ tag: true, content: 'Go Fight !' }}\r\n          labelPosition='right'\r\n          placeholder='房间号'\r\n          value={this.props.sendValue}\r\n          onChange={(value) => this.props.handelChage(value)} />\r\n        <p>{this.props.errorStatus}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\ninterface WebSocketProps {\r\n\r\n}\r\ninterface WebSocketState {\r\n  sendValue: string,\r\n  errorStatus: string,\r\n  connectStatus: boolean,\r\n  roomId: string\r\n}\r\nclass WebSocket extends React.Component<WebSocketProps, WebSocketState> {\r\n  constructor(props: WebSocketProps) {\r\n    super(props)\r\n    this.state = {\r\n      sendValue: '',\r\n      errorStatus: '',\r\n      connectStatus: false,\r\n      roomId: ''\r\n    }\r\n  }\r\n\r\n  initSocket = (id: string) => {\r\n    socket = io('ws://' + config.IP + '/' + id)\r\n    // 连接通讯之后 将当前用户记录在socket服务\r\n    socket.on('enter', () => {\r\n      this.setState({\r\n        connectStatus: true,\r\n        roomId: id\r\n      })\r\n      socket.emit('enter', userInfo.account)\r\n    })\r\n  }\r\n\r\n  search = () => {\r\n    const inputText = this.state.sendValue\r\n    if (inputText) {\r\n      intoRoom({ roomName: inputText, defensive: userInfo.account }).then(res => {\r\n        if ((res as any).code === 200) {\r\n          this.initSocket(res.data.roomId)\r\n        } else {\r\n          console.log(res)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  add = () => {\r\n    const inputText = this.state.sendValue\r\n    if (inputText) {\r\n      addRoom({upperHand: userInfo.account, roomName: inputText, roomId: new Date().getTime()}).then(res => {\r\n        if ((res as any).code === 200) {\r\n          this.initSocket(res.data.roomId)\r\n        } else {\r\n          console.log(res)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  handelChage = (e: any) => {\r\n    this.setState({\r\n      sendValue: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return !this.state.connectStatus ? <SearchRoom {...this.state} handelChage={this.handelChage} search={this.search} add={this.add} /> :\r\n    <Gobang userInfo={userInfo} roomId={this.state.roomId} socket={socket} />\r\n  }\r\n}\r\n\r\nexport default WebSocket\r\n","import fetch from '../request/index'\n\nexport function intoRoom(data: any) {\n  return fetch({\n    url: '/api/chat/into_room',\n    method: 'post',\n    data: data\n  })\n}\n\nexport function addRoom(data: any) {\n  return fetch({\n    url: '/api/chat/add_room',\n    method: 'post',\n    data: data\n  })\n}\n"],"sourceRoot":""}