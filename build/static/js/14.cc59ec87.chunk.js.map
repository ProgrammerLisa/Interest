{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js","../node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js","../node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js","../node_modules/semantic-ui-react/dist/es/elements/Button/Button.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/games/TicTacToe.tsx"],"names":["ButtonContent","props","children","className","content","hidden","visible","classes","cx","useKeyOnly","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","ButtonGroup","attached","basic","buttons","color","compact","floated","fluid","icon","inverted","labeled","negative","positive","primary","secondary","size","toggle","vertical","widths","useKeyOrValueAndKey","useValueAndKey","useWidthProp","_isNil","_map","button","Button","create","ButtonOr","text","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_defineProperty","_assertThisInitialized","createRef","_this$props","label","_this$props2","disabled","tabIndex","_invoke","ref","current","e","preventDefault","_this$props3","labelPosition","_inherits","_createClass","key","value","role","_this$props4","active","animated","circular","loading","baseClasses","hasIconClass","labeledClasses","wrapperClasses","computeElementType","computeTabIndex","buttonClasses","containerClasses","labelElement","Label","defaultProps","pointing","autoGenerateKey","onClick","handleClick","Ref","innerRef","undefined","Icon","hasChildren","computeButtonAriaRole","Component","as","createShorthandFactory","_slicedToArray","arr","i","isArray","Symbol","iterator","Object","prototype","toString","_arr","_n","_d","_e","_s","_i","next","done","push","err","TypeError","Square","highlight","Board","coordinate","squares","boardColumn","count","column","boardRow","row","renderSquare","renderBoard","Gobang","state","history","fill","xIsNext","stepNumber","sort","window","addEventListener","document","body","classList","add","remove","keyCode","target","tagName","slice","calculateWinner","forEach","map","setState","step","status","winner","moves","move","coordinateText","historyAtrribute","desc","jumpTo","member","Element","checkBoard","reverse","lines","a","b","c"],"mappings":"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","file":"static/js/14.cc59ec87.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * Used in some Button types, such as `animated`.\n */\n\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nButtonContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport Button from './Button';\n/**\n * Buttons can be grouped.\n */\n\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      buttons = props.buttons,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), useWidthProp(widths), 'buttons', className);\n  var rest = getUnhandledProps(ButtonGroup, props);\n  var ElementType = getElementType(ButtonGroup, props);\n\n  if (_isNil(buttons)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? content : children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(buttons, function (button) {\n    return Button.create(button);\n  }));\n}\n\nButtonGroup.handledProps = [\"as\", \"attached\", \"basic\", \"buttons\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"labeled\", \"negative\", \"positive\", \"primary\", \"secondary\", \"size\", \"toggle\", \"vertical\", \"widths\"];\nButtonGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Groups can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Array of shorthand Button values. */\n  buttons: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * Button groups can contain conditionals.\n */\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = cx('or', className);\n  var rest = getUnhandledProps(ButtonOr, props);\n  var ElementType = getElementType(ButtonOr, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default ButtonOr;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport { Ref } from '@stardust-ui/react-component-ref';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport { childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey } from '../../lib';\nimport Icon from '../Icon/Icon';\nimport Label from '../Label/Label';\nimport ButtonContent from './ButtonContent';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonOr from './ButtonOr';\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n      if (!_isNil(attached) || !_isNil(label)) return 'div';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      return _invoke(_this.ref.current, 'focus');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hasIconClass\", function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n      if (icon === true) return true;\n      return icon && (labelPosition || childrenUtils.isNil(children) && _isNil(content));\n    });\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"computeButtonAriaRole\",\n    value: function computeButtonAriaRole(ElementType) {\n      var role = this.props.role;\n      if (!_isNil(role)) return role;\n      if (ElementType !== 'button') return 'button';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          active = _this$props4.active,\n          animated = _this$props4.animated,\n          attached = _this$props4.attached,\n          basic = _this$props4.basic,\n          children = _this$props4.children,\n          circular = _this$props4.circular,\n          className = _this$props4.className,\n          color = _this$props4.color,\n          compact = _this$props4.compact,\n          content = _this$props4.content,\n          disabled = _this$props4.disabled,\n          floated = _this$props4.floated,\n          fluid = _this$props4.fluid,\n          icon = _this$props4.icon,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          negative = _this$props4.negative,\n          positive = _this$props4.positive,\n          primary = _this$props4.primary,\n          secondary = _this$props4.secondary,\n          size = _this$props4.size,\n          toggle = _this$props4.toggle;\n      var baseClasses = cx(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));\n      var labeledClasses = cx(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = cx(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));\n      var rest = getUnhandledProps(Button, this.props);\n      var ElementType = getElementType(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!_isNil(label)) {\n        var buttonClasses = cx('ui', baseClasses, 'button', className);\n        var containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses);\n        var labelElement = Label.create(label, {\n          defaultProps: {\n            basic: true,\n            pointing: labelPosition === 'left' ? 'right' : 'left'\n          },\n          autoGenerateKey: false\n        });\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: containerClasses,\n          onClick: this.handleClick\n        }), labelPosition === 'left' && labelElement, React.createElement(Ref, {\n          innerRef: this.ref\n        }, React.createElement(\"button\", {\n          className: buttonClasses,\n          \"aria-pressed\": toggle ? !!active : undefined,\n          disabled: disabled,\n          tabIndex: tabIndex\n        }, Icon.create(icon, {\n          autoGenerateKey: false\n        }), \" \", content)), (labelPosition === 'right' || !labelPosition) && labelElement);\n      }\n\n      var classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n      var hasChildren = !childrenUtils.isNil(children);\n      var role = this.computeButtonAriaRole(ElementType);\n      return React.createElement(Ref, {\n        innerRef: this.ref\n      }, React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        \"aria-pressed\": toggle ? !!active : undefined,\n        disabled: disabled && ElementType === 'button' || undefined,\n        onClick: this.handleClick,\n        role: role,\n        tabIndex: tabIndex\n      }), hasChildren && children, !hasChildren && Icon.create(icon, {\n        autoGenerateKey: false\n      }), !hasChildren && content));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n_defineProperty(Button, \"defaultProps\", {\n  as: 'button'\n});\n\n_defineProperty(Button, \"Content\", ButtonContent);\n\n_defineProperty(Button, \"Group\", ButtonGroup);\n\n_defineProperty(Button, \"Or\", ButtonOr);\n\n_defineProperty(Button, \"handledProps\", [\"active\", \"animated\", \"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"negative\", \"onClick\", \"positive\", \"primary\", \"role\", \"secondary\", \"size\", \"tabIndex\", \"toggle\"]);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A button can show it is currently the active user selection. */\n  active: PropTypes.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: customPropTypes.every([PropTypes.node, customPropTypes.disallow(['label']), customPropTypes.givenProps({\n    icon: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.element.isRequired])\n  }, customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A button can have different colors */\n  color: PropTypes.oneOf([].concat(_toConsumableArray(SUI.COLORS), ['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: customPropTypes.some([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: customPropTypes.some([PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** The role of the HTML element. */\n  role: PropTypes.string,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** A button can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: PropTypes.bool\n} : {};\nButton.create = createShorthandFactory(Button, function (value) {\n  return {\n    content: value\n  };\n});\nexport default Button;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react'\r\nimport { Button } from 'semantic-ui-react'\r\nimport '../../assets/sass/Gobang.css'\r\n\r\ninterface SquareType {\r\n  [index: number]: string\r\n}\r\n\r\ninterface SquareProps {\r\n  highlight: string,\r\n  onClick: () => void,\r\n  value: string\r\n}\r\nfunction Square (props: SquareProps) {\r\n  return (\r\n    <button className={`square ${props.highlight}`} onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  )\r\n}\r\n\r\ninterface BoardProps {\r\n  squares: SquareType,\r\n  highlight: string[],\r\n  onClick: (i: number, coordinate: any) => void\r\n}\r\nclass Board extends React.Component<BoardProps, {}> {\r\n  renderSquare (i: number, coordinate: any) {\r\n    return (\r\n      <Square\r\n        key={`square${i}`}\r\n        value={this.props.squares[i]}\r\n        highlight={this.props.highlight[i]}\r\n        onClick={() => this.props.onClick(i, coordinate)}\r\n      />\r\n    )\r\n  }\r\n  renderBoard () {\r\n    let boardColumn = [], count = 0\r\n    for (var column = 0; column < 3; column++) {\r\n      let boardRow = []\r\n      for (var row = 0; row < 3; row++) {\r\n        boardRow.push(this.renderSquare(count, [column + 1, row + 1]))\r\n        count++\r\n      }\r\n      boardColumn.push(<div className=\"board-row\" key={`column${column}`}>{boardRow}</div>)\r\n    }\r\n    return boardColumn\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        {this.renderBoard()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\ninterface HistoryType {\r\n  squares: SquareType,\r\n  highlight: string,\r\n  coordinate: any,\r\n  className: string\r\n}\r\ninterface GobangProps {\r\n\r\n}\r\ninterface GobangState {\r\n  history: any,\r\n  stepNumber: number,\r\n  xIsNext: boolean,\r\n  sort: boolean\r\n}\r\nclass Gobang extends React.Component<GobangProps, GobangState> {\r\n  componentDidMount () {\r\n    window.addEventListener('mousedown', (e) => {\r\n      document.body.classList.add('mouse-navigation')\r\n      document.body.classList.remove('kbd-navigation')\r\n    })\r\n    window.addEventListener('keydown', (e) => {\r\n      if (e.keyCode === 9) {\r\n        document.body.classList.remove('mouse-navigation')\r\n        document.body.classList.add('kbd-navigation')\r\n      }\r\n    })\r\n    window.addEventListener('click', (e) => {\r\n      if ((e.target as any).tagName === 'A') {\r\n        e.preventDefault()\r\n      }\r\n    })\r\n  }\r\n  componentWillUnmount () {\r\n    document.body.classList.remove('mouse-navigation')\r\n    document.body.classList.remove('kbd-navigation')\r\n  }\r\n  handleClick (i: number, coordinate: any) { \r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\r\n    const current = history[history.length - 1]\r\n    const squares = current.squares.slice()\r\n    const highlight = current.highlight\r\n    if (squares[i] || calculateWinner(squares)) return\r\n    history.forEach((map: any) => { map.className = '' })\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        highlight: highlight,\r\n        coordinate: coordinate,\r\n        className: 'active-history'\r\n      }]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length\r\n    })\r\n  }\r\n\r\n  jumpTo (step: number) {\r\n    let history = this.state.history.map((map: HistoryType) => {\r\n      map.className = ''\r\n      return map\r\n    })\r\n    history[step].className = 'active-history'\r\n    this.setState({\r\n      xIsNext: (step % 2) === 0,\r\n      stepNumber: step,\r\n      history: history\r\n    })\r\n  }\r\n\r\n  sort (sort: boolean) {\r\n    if (sort !== this.state.sort) {\r\n      this.setState({\r\n        sort: !this.state.sort\r\n      })\r\n    }\r\n  }\r\n  \r\n  constructor (props: GobangProps) {\r\n    super(props)\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        highlight: Array(9).fill(null),\r\n        coordinate: [],\r\n        className: 'active-history'\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      sort: true\r\n    }\r\n  }\r\n\r\n  render () {\r\n    let history = this.state.history.slice()\r\n    let current = history[this.state.stepNumber]\r\n    const winner = calculateWinner(current.squares)\r\n    const moves = history.map((step: HistoryType, move: number) => {\r\n      let coordinateText = ''\r\n      let historyAtrribute = history[move]\r\n      if (historyAtrribute.coordinate.length > 0) coordinateText = `(${historyAtrribute.coordinate[0]}, ${historyAtrribute.coordinate[1]})`\r\n      const desc = move ? `Go to move # ${move} ${coordinateText}` : 'Go to game start'\r\n      return (\r\n        <li key={`move${move}`}>\r\n          <Button inverted color='pink' className={historyAtrribute.className} onClick={() => this.jumpTo(move)}>{desc}</Button>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    let status\r\n    if (winner) {\r\n      status = `winner: ${winner.winner}`\r\n      winner.member.forEach(Element => {\r\n        current.highlight[Element] = 'winner-piece'\r\n      })\r\n    } else if (checkBoard(current.squares)) {\r\n      status = `平局`\r\n    } else {\r\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`\r\n    }\r\n    return (\r\n      <div>\r\n        <div>{status}</div>\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board squares={current.squares} highlight={current.highlight} onClick={(i, coordinate) => this.handleClick(i, coordinate)} />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>\r\n              <Button inverted color='violet' onClick={() => this.sort(true)}>升序</Button>\r\n              <Button inverted color='purple' onClick={() => this.sort(false)}>降序</Button>\r\n            </div>\r\n            <ul>{this.state.sort ? moves : moves.reverse()}</ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction calculateWinner (squares: SquareType) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8]\r\n  ]\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i]\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return { winner: squares[a], member: lines[i] }\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nfunction checkBoard (squares: SquareType) {\r\n  for (var i in squares) {\r\n    if (!squares[i]) return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport default Gobang\r\n"],"sourceRoot":""}