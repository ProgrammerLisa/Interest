{"version":3,"sources":["components/loading.tsx","components/scroll.tsx","components/error.tsx","router/setRouter.tsx","router/routes.tsx","views/sidebar/siderbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Loading","React","Component","history","createBrowserHistory","listen","location","action","currentY","document","documentElement","scrollTop","body","setTimeout","scrollAnimation","ScrollToTopOnMount","this","props","targetY","needScrollTop","_currentY","dist","Math","ceil","window","scrollTo","defaultProps","withRouter","ErrorBounday","state","hasError","children","Login","user","JSON","parse","localStorage","getItem","routeList","map","Element","needLogin","component","loader","AsyncLoadComponent","Loadable","loading","pastDelay","delay","gamesRouter","path","name","exact","icon","webglRouter","gamesRoutes","setRouterList","webglRoutes","routes","Nav","toggleMenu","status","setState","isOpen","Sidebar","Pushable","as","Segment","Menu","animation","inverted","vertical","visible","width","Item","to","Icon","Pusher","fallback","className","route","key","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cae1c300.chunk.js","sourcesContent":["import React from 'react'\n\nexport default class Loading extends React.Component {\n  render () {\n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  }\n}\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n/*\nclass ScrollToTop extends Component {\n  componentDidUpdate (prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0)\n    }\n  }\n  render () {\n    return this.props.children\n  }\n}\n*/\n\nvar history = createBrowserHistory()\nhistory.listen((location, action) => {\n  let currentY = document.documentElement.scrollTop || document.body.scrollTop\n  setTimeout(() => {\n    if (action === 'POP') { return }\n    scrollAnimation(currentY, 0)\n  })\n})\n\ninterface ScrollToTopOnMountProps {\n  history: any\n}\nclass ScrollToTopOnMount extends Component<ScrollToTopOnMountProps, {}> {\n  componentDidMount() {\n    let currentY = document.documentElement.scrollTop || document.body.scrollTop\n    if (this.props.history.action === 'POP') { return }\n    scrollAnimation(currentY, 0)\n  }\n  render() {\n    return null\n  }\n}\n\nfunction scrollAnimation(currentY: number, targetY: number): any {\n  let needScrollTop = targetY - currentY\n  let _currentY = currentY\n  setTimeout(() => {\n    const dist = Math.ceil(needScrollTop / 10)\n    _currentY += dist\n    window.scrollTo(_currentY, currentY)\n    if (needScrollTop > 10 || needScrollTop < -10) {\n      scrollAnimation(_currentY, targetY)\n    } else {\n      window.scrollTo(_currentY, targetY)\n    }\n  }, 1)\n}\n\n(ScrollToTopOnMount as any).defaultProps = {\n  history: history\n}\n\n// export default withRouter(ScrollToTop)\nexport default withRouter(ScrollToTopOnMount as any)\n","import React from 'react'\n\ninterface ErrorBoundayState {\n  hasError: boolean\n}\nclass ErrorBounday extends React.Component<{}, ErrorBoundayState> {\n  constructor (props: any) {\n    super(props)\n    this.state = {\n      hasError: false\n    }\n  }\n  \n  static getDerivedStateFromError () {\n    return { hasError: true }\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something Went Wrong.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBounday\n","import React from 'react' // , { lazy }\r\nimport Loadable from 'react-loadable'\r\nimport Loading from '../components/loading'\r\nimport ScrollToTop from '../components/scroll' // 切换路由时滚动到顶部 返回或前进则滚动高度不变\r\nimport ErrorBounday from '../components/error' // 错误边界\r\nconst Login = () => import('../views/login/login')\r\nconst user = JSON.parse((localStorage as any).getItem('kmr_userInfo'))\r\n\r\ninterface routeListItem {\r\n  path: string,\r\n  name: string,\r\n  component: any,\r\n  exact: boolean,\r\n  icon?: string\r\n}\r\n\r\n\r\ninterface routeListItem {\r\n  path: string,\r\n  name: string,\r\n  component: any,\r\n  needLogin: boolean,\r\n  exact: boolean,\r\n  icon?: string\r\n}\r\n\r\nfunction asyncLoad(loader: () => Promise<any>) {\r\n  return Loadable({\r\n    loader,\r\n    loading: props => {\r\n      if (props.pastDelay) {\r\n        return <Loading />\r\n      } else {\r\n        return null\r\n      }\r\n    },\r\n    delay: 500\r\n  })\r\n}\r\n\r\nexport default function(routeList: routeListItem[]) {\r\n  const routes = routeList.map(Element => {\r\n    // 判断是否需要登陆\r\n    if (Element.needLogin) {\r\n      if (!user) Element.component = Login\r\n    }\r\n    const AsyncLoadComponent = asyncLoad(Element.component)\r\n    // 每次切换路由时 屏幕内容滚动到最上方\r\n    let ErrorComponent = () => (\r\n      <ErrorBounday>\r\n        <ScrollToTop/>\r\n        <AsyncLoadComponent/>\r\n      </ErrorBounday>\r\n    )\r\n    return { ...Element, component: ErrorComponent }\r\n  })\r\n  return routes\r\n}\r\n","import setRouterList from  './setRouter'\n/* \n  懒加载组件 有两种方式 推荐使用第二种\n  1. lazy(() => import(组件地址)) 加载组件时会有闪屏 用户体验较差\n  2. Loadable({\n    loader: () => import(组件地址),\n    loading: 占位符组件\n  }) 加载时无闪屏 用户体验较好 但是有已废弃的生命周期警告\n  在相关文件中将componentWillMount改为UNSAFE_componentWillMount\n*/\n//\nconst Login = () => import('../views/login/login')\nconst Games = () => import('../views/sidebar/games')\nconst WebGL = () => import('../views/sidebar/webgl')\nconst NotFound = () => import('../components/404')\nconst TicTacToe = () => import('../views/games/ticTacToe')\nconst Gobang = () => import('../views/games/gobang')\nconst ChatRoom = () => import('../views/games/chatRoom')\nconst Bargain = () => import('../views/games/bargain')\nconst Map3D = () => import('../views/webgl/T1-Map3D')\nconst CreateObjects = () => import('../views/webgl/T2-CreateObjects')\nconst UseTexture = () => import('../views/webgl/T3-UseTexture')\nconst DefaultGeometry = () => import('../views/webgl/T4-DefaultGeometry')\nconst FontModule = () => import('../views/webgl/T5-FontModel')\nconst Shadow = () => import('../views/webgl/T6-Shadow')\nconst Logs = () =>　import('../views/logs/index')\n/*\n  lazy()方法示例\n  const GobangLazy = lazy(Gobang)\n  const ContextLazy = lazy(Context)\n  const FormLazy = lazy(Form)\n*/\n\nconst sidebarRouter =\n[\n  {\n    path: '/',\n    name: 'home',\n    component: Login,\n    needLogin: true,\n    exact: true\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: Login,\n    needLogin: false,\n    exact: false\n  },\n  {\n    path: '/games',\n    name: 'games',\n    component: Games,\n    needLogin: false,\n    exact: false\n  },\n  {\n    path: '/webgl',\n    name: 'webgl',\n    component: WebGL,\n    needLogin: false,\n    exact: false\n  },\n  {\n    path: '/404',\n    name: '404',\n    component: NotFound,\n    needLogin: false,\n    exact: false\n  }\n]\n\nconst gamesRouter =\n[\n  {\n    path: '/gobang',\n    name: '五子棋',\n    component: Gobang,\n    needLogin: true,\n    exact: false,\n    icon: 'chess board'\n  },\n  {\n    path: '/ticTacToe',\n    name: '井字棋',\n    component: TicTacToe,\n    needLogin: true,\n    exact: false,\n    icon: 'th'\n  },\n  {\n    path: '/chatRoom',\n    name: '联机五子棋',\n    component: ChatRoom,\n    needLogin: true,\n    exact: false,\n    icon: 'handshake outline'\n  },\n  {\n    path: '/bargain',\n    name: '砍价',\n    component: Bargain,\n    needLogin: true,\n    exact: false,\n    icon: 'cut'\n  }\n]\n\nconst webglRouter =\n[\n  {\n    path: '/map3D',\n    name: '3D地图',\n    component: Map3D,\n    needLogin: true,\n    exact: false,\n    icon: 'paper plane outline'\n  },\n  {\n    path: '/create-objects',\n    name: '创建物体',\n    component: CreateObjects,\n    needLogin: true,\n    exact: false,\n    icon: 'hourglass half'\n  },\n  {\n    path: '/use-texture',\n    name: '使用纹理',\n    component: UseTexture,\n    needLogin: true,\n    exact: false,\n    icon: 'barcode'\n  },\n  {\n    path: '/default-geometry',\n    name: '内置几何模型',\n    component: DefaultGeometry,\n    needLogin: true,\n    exact: false,\n    icon: 'clone outline'\n  },\n  {\n    path: '/font-module',\n    name: '字体模型',\n    component: FontModule,\n    needLogin: true,\n    exact: false,\n    icon: 'clone outline'\n  },\n  {\n    path: '/shadow',\n    name: '阴影',\n    component: Shadow,\n    needLogin: true,\n    exact: false,\n    icon: 'clone outline'\n  }\n]\n\nconst logsRouter = [\n  {\n    path: '/logs',\n    name: '日志',\n    component: Logs,\n    needLogin: false,\n    exact: false,\n    icon: 'clone outline'\n  }\n]\nconst routeList = [...sidebarRouter, ...gamesRouter, ...webglRouter, ...logsRouter]\nexport const gamesRoutes = setRouterList(gamesRouter)\nexport const webglRoutes = setRouterList(webglRouter)\nexport const routes = setRouterList(routeList)\n","import React, { Suspense, Component } from 'react'\nimport { Route, Switch, Link } from 'react-router-dom'\nimport { routes } from '../../router/routes'\nimport { Icon, Menu, Segment, Sidebar } from 'semantic-ui-react'\n\ninterface NavState {\n  isOpen: boolean\n}\n\nclass Nav extends Component<{}, NavState> {\n  toggleMenu = (status: boolean) => {\n    this.setState({\n      isOpen: !status\n    })\n  }\n  render() {\n    return (\n      <Route>\n        <Sidebar.Pushable as={Segment}>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            icon='labeled'\n            inverted\n            vertical\n            visible\n            width='thin'\n          >\n            <Menu.Item>\n              <Link to='/games'>\n                <Icon name='chess' />\n                <p>游戏室</p>\n              </Link>\n            </Menu.Item>\n            <Menu.Item>\n              <Link to='/webgl'>\n                <Icon name='globe' />\n                <p>3D世界</p>\n              </Link>\n            </Menu.Item>\n            <Menu.Item>\n              <Link to='/logs'>\n                <Icon name='file alternate' />\n                <p>日志</p>\n              </Link>\n            </Menu.Item>\n          </Sidebar>\n          <Sidebar.Pusher>\n            <Suspense fallback={<div>Loading...</div>}>\n              <header className=\"App-header\">\n                <Switch>\n                  {routes.map(route => (<Route {...route} key={route.name}/>))}\n                </Switch>\n              </header>\n            </Suspense>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Route>\n    )\n  }\n}\n\nexport default Nav\n","import React from 'react'\nimport Sidebar from './views/sidebar/siderbar'\nimport 'semantic-ui-css/semantic.min.css'\nimport './assets/sass/App.scss'\nimport './assets/sass/style.scss'\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Sidebar />\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './assets/sass/index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}