{"version":3,"sources":["common/orbitControls.ts","assets/img/land_ocean.jpg","views/webgl/T1-Map3D.tsx"],"names":["STATE","NONE","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","CHANGE_EVENT","type","START_EVENT","END_EVENT","OrbitControls","object","domElement","domWindow","window","enabled","target","enableZoom","zoomSpeed","minDistance","maxDistance","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableKeys","keys","mouseButtons","enableDamping","dampingFactor","spherical","sphericalDelta","scale","target0","position0","zoom0","state","panOffset","zoomChanged","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","updateLastPosition","updateOffset","updateQuat","updateLastQuaternion","updateQuatInverse","panLeftV","panUpV","panInternalOffset","onContextMenu","onMouseUp","onMouseDown","onMouseMove","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onKeyDown","undefined","document","THREE","Infinity","Math","PI","LEFT","UP","RIGHT","BOTTOM","ORBIT","ZOOM","MIDDLE","clone","position","zoom","setFromUnitVectors","up","inverse","event","preventDefault","button","set","clientX","clientY","addEventListener","dispatchEvent","subVectors","element","body","rotateLeft","x","clientWidth","rotateUp","y","clientHeight","copy","update","dollyIn","getZoomScale","dollyOut","pan","removeEventListener","stopPropagation","deltaY","keyCode","touches","length","pageX","pageY","dx","dy","distance","sqrt","this","sub","applyQuaternion","setFromVector3","getAutoRotationAngle","theta","phi","max","min","makeSafe","radius","add","setFromSpherical","lookAt","distanceToSquared","dot","quaternion","objectMatrix","setFromMatrixColumn","multiplyScalar","deltaX","targetDistance","tan","fov","panLeft","matrix","panUp","right","left","top","bottom","console","warn","dollyScale","updateProjectionMatrix","pow","angle","value","module","exports","Canvas","elementNode","getElementById","renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","innerWidth","innerHeight","appendChild","Sence","camera","z","controls","render","mesh","url","load","texture","material","map","side","geometry","createMesh","EarthImg","ambi","spotLight","intensity","stats","Stats","showPanel","dom","run","requestAnimationFrame","main","id","React","Component"],"mappings":"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","file":"static/js/17.f17482df.chunk.js","sourcesContent":["import * as THREE from 'three';\n\nconst STATE = {\n  NONE: - 1,\n  ROTATE: 0,\n  DOLLY: 1,\n  PAN: 2,\n  TOUCH_ROTATE: 3,\n  TOUCH_DOLLY: 4,\n  TOUCH_PAN: 5\n};\n\nconst CHANGE_EVENT = { type: 'change' };\nconst START_EVENT = { type: 'start' };\nconst END_EVENT = { type: 'end' };\nconst EPS = 0.000001;\n\n/**\n* @author qiao / https://github.com/qiao\n* @author mrdoob / http://mrdoob.com\n* @author alteredq / http://alteredqualia.com/\n* @author WestLangley / http://github.com/WestLangley\n* @author erich666 / http://erichaines.com\n* @author nicolaspanel / http://github.com/nicolaspanel\n*\n* This set of controls performs orbiting, dollying (zooming), and panning.\n* Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n*    Orbit - left mouse / touch: one finger move\n*    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n*    Pan - right mouse, or arrow keys / touch: three finger swipe\n*/\nexport class OrbitControls extends THREE.EventDispatcher {\n  object: THREE.Camera;\n  domElement: HTMLElement | HTMLDocument;\n  window: Window;\n\n  // API\n  enabled: boolean;\n  target: THREE.Vector3;\n\n  enableZoom: boolean;\n  zoomSpeed: number;\n  minDistance: number;\n  maxDistance: number;\n  enableRotate: boolean;\n  rotateSpeed: number;\n  enablePan: boolean;\n  keyPanSpeed: number;\n  autoRotate: boolean;\n  autoRotateSpeed: number;\n  minZoom: number;\n  maxZoom: number;\n  minPolarAngle: number;\n  maxPolarAngle: number;\n  minAzimuthAngle: number;\n  maxAzimuthAngle: number;\n  enableKeys: boolean;\n  keys: { LEFT: number; UP: number; RIGHT: number; BOTTOM: number; };\n  mouseButtons: { ORBIT: THREE.MOUSE; ZOOM: THREE.MOUSE; PAN: THREE.MOUSE; };\n  enableDamping: boolean;\n  dampingFactor: number;\n\n  private spherical: THREE.Spherical;\n  private sphericalDelta: THREE.Spherical;\n  private scale: number;\n  private target0: THREE.Vector3;\n  private position0: THREE.Vector3;\n  private zoom0: any;\n  private state: number;\n  private panOffset: THREE.Vector3;\n  private zoomChanged: boolean;\n\n  private rotateStart: THREE.Vector2;\n  private rotateEnd: THREE.Vector2;\n  private rotateDelta: THREE.Vector2\n\n  private panStart: THREE.Vector2;\n  private panEnd: THREE.Vector2;\n  private panDelta: THREE.Vector2;\n\n  private dollyStart: THREE.Vector2;\n  private dollyEnd: THREE.Vector2;\n  private dollyDelta: THREE.Vector2;\n\n  private updateLastPosition: THREE.Vector3;\n  private updateOffset: THREE.Vector3;\n  private updateQuat: THREE.Quaternion;\n  private updateLastQuaternion: THREE.Quaternion;\n  private updateQuatInverse: THREE.Quaternion;\n\n  private panLeftV: THREE.Vector3;\n  private panUpV: THREE.Vector3;\n  private panInternalOffset: THREE.Vector3;\n\n  private onContextMenu: EventListener;\n  private onMouseUp: EventListener;\n  private onMouseDown: EventListener;\n  private onMouseMove: EventListener;\n  private onMouseWheel: EventListener;\n  private onTouchStart: EventListener;\n  private onTouchEnd: EventListener;\n  private onTouchMove: EventListener;\n  private onKeyDown: EventListener;\n\n  constructor (object: THREE.Camera, domElement?: HTMLElement, domWindow?: Window) {\n    super();\n    this.object = object;\n\n    this.domElement = ( domElement !== undefined ) ? domElement : document;\n    this.window = ( domWindow !== undefined ) ? domWindow : window;\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new THREE.Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n    this.minAzimuthAngle = - Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.25;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n    // Set to false to disable use of the keys\n    this.enableKeys = true;\n\n    // The four arrow keys\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n    // Mouse buttons\n    this.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = (this.object as any).zoom;\n\n    // for update speedup\n    this.updateOffset = new THREE.Vector3();\n    // so camera.up is the orbit axis\n    this.updateQuat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n    this.updateQuatInverse = this.updateQuat.clone().inverse();\n    this.updateLastPosition = new THREE.Vector3();\n    this.updateLastQuaternion = new THREE.Quaternion();\n\n    this.state = STATE.NONE;\n    this.scale = 1;\n\n    // current position in spherical coordinates\n    this.spherical = new THREE.Spherical();\n    this.sphericalDelta = new THREE.Spherical();\n\n    this.panOffset = new THREE.Vector3();\n    this.zoomChanged = false;\n\n    this.rotateStart = new THREE.Vector2();\n    this.rotateEnd = new THREE.Vector2();\n    this.rotateDelta = new THREE.Vector2();\n\n    this.panStart = new THREE.Vector2();\n    this.panEnd = new THREE.Vector2();\n    this.panDelta = new THREE.Vector2();\n\n    this.dollyStart = new THREE.Vector2();\n    this.dollyEnd = new THREE.Vector2();\n    this.dollyDelta = new THREE.Vector2();\n\n    this.panLeftV = new THREE.Vector3();\n    this.panUpV = new THREE.Vector3();\n    this.panInternalOffset = new THREE.Vector3();\n\n    // event handlers - FSM: listen for events and reset state\n\n    this.onMouseDown = ( event: any ) => {\n      if ( this.enabled === false ) return;\n      event.preventDefault();\n      if ( (event as any).button === this.mouseButtons.ORBIT ) {\n        if ( this.enableRotate === false ) return;\n        this.rotateStart.set( event.clientX, event.clientY );\n        this.state = STATE.ROTATE;\n      } else if ( event.button === this.mouseButtons.ZOOM ) {\n        if ( this.enableZoom === false ) return;\n        this.dollyStart.set( event.clientX, event.clientY );\n        this.state = STATE.DOLLY;\n      } else if ( event.button === this.mouseButtons.PAN ) {\n        if ( this.enablePan === false ) return;\n        this.panStart.set( event.clientX, event.clientY );\n        this.state = STATE.PAN;\n      }\n\n      if ( this.state !== STATE.NONE ) {\n        document.addEventListener( 'mousemove', this.onMouseMove, false );\n        document.addEventListener( 'mouseup', this.onMouseUp, false );\n        this.dispatchEvent( START_EVENT );\n      }\n    };\n\n    this.onMouseMove = ( event: any ) => {\n\n      if ( this.enabled === false ) return;\n\n      event.preventDefault();\n\n      if ( this.state === STATE.ROTATE ) {\n        if ( this.enableRotate === false ) return;\n        this.rotateEnd.set( event.clientX, event.clientY );\n        this.rotateDelta.subVectors( this.rotateEnd, this.rotateStart );\n        const element = this.domElement === document ? this.domElement.body : this.domElement;\n\n        // rotating across whole screen goes 360 degrees around\n        this.rotateLeft( 2 * Math.PI * this.rotateDelta.x / (element as any).clientWidth * this.rotateSpeed );\n        // rotating up and down along whole screen attempts to go 360, but limited to 180\n        this.rotateUp( 2 * Math.PI * this.rotateDelta.y / (element as any).clientHeight * this.rotateSpeed );\n        this.rotateStart.copy( this.rotateEnd );\n\n        this.update();\n      } else if ( this.state === STATE.DOLLY ) {\n\n        if ( this.enableZoom === false ) return;\n\n        this.dollyEnd.set( event.clientX, event.clientY );\n        this.dollyDelta.subVectors( this.dollyEnd, this.dollyStart );\n\n        if ( this.dollyDelta.y > 0 ) {\n          this.dollyIn( this.getZoomScale() );\n        } else if ( this.dollyDelta.y < 0 ) {\n          this.dollyOut( this.getZoomScale() );\n        }\n\n        this.dollyStart.copy( this.dollyEnd );\n        this.update();\n      } else if ( this.state === STATE.PAN ) {\n\n        if ( this.enablePan === false ) return;\n\n        this.panEnd.set( event.clientX, event.clientY );\n        this.panDelta.subVectors( this.panEnd, this.panStart );\n        this.pan( this.panDelta.x, this.panDelta.y );\n        this.panStart.copy( this.panEnd );\n        this.update();\n      }\n    }\n\n    this.onMouseUp = ( event: any ) => {\n      if ( this.enabled === false ) return;\n      document.removeEventListener( 'mousemove', this.onMouseMove, false );\n      document.removeEventListener( 'mouseup', this.onMouseUp, false );\n\n      this.dispatchEvent( END_EVENT );\n      this.state = STATE.NONE;\n    };\n\n    this.onMouseWheel = ( event: any ) => {\n\n      if ( this.enabled === false || this.enableZoom === false || ( this.state !== STATE.NONE && this.state !== STATE.ROTATE ) ) return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      if ( event.deltaY < 0 ) {\n        this.dollyOut( this.getZoomScale() );\n      } else if ( event.deltaY > 0 ) {\n        this.dollyIn( this.getZoomScale() );\n      }\n\n      this.update();\n\n      this.dispatchEvent( START_EVENT ); // not sure why these are here...\n      this.dispatchEvent( END_EVENT );\n    };\n\n    this.onKeyDown = ( event: any ) => {\n\n      if ( this.enabled === false || this.enableKeys === false || this.enablePan === false ) return;\n\n      switch ( event.keyCode ) {\n        // eslint-disable-next-line no-lone-blocks\n        case this.keys.UP: {\n          this.pan( 0, this.keyPanSpeed );\n          this.update();\n        } break;\n        // eslint-disable-next-line no-lone-blocks\n        case this.keys.BOTTOM: {\n          this.pan( 0, - this.keyPanSpeed );\n          this.update();\n        } break;\n        // eslint-disable-next-line no-lone-blocks\n        case this.keys.LEFT: {\n          this.pan( this.keyPanSpeed, 0 );\n          this.update();\n        } break;\n        // eslint-disable-next-line no-lone-blocks\n        case this.keys.RIGHT: {\n          this.pan( - this.keyPanSpeed, 0 );\n          this.update();\n        } break;\n      }\n    };\n\n    this.onTouchStart = ( event: any ) => {\n\n      if ( this.enabled === false ) return;\n\n      switch ( event.touches.length ) {\n        // one-fingered touch: rotate\n        // eslint-disable-next-line no-lone-blocks\n        case 1: {\n          if ( this.enableRotate === false ) return;\n\n          this.rotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n          this.state = STATE.TOUCH_ROTATE;\n        } break;\n        // two-fingered touch: dolly\n        // eslint-disable-next-line no-lone-blocks\n        case 2:\t{\n          if ( this.enableZoom === false ) return;\n\n          var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n          var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n          var distance = Math.sqrt( dx * dx + dy * dy );\n          this.dollyStart.set( 0, distance );\n          this.state = STATE.TOUCH_DOLLY;\n        } break;\n        // three-fingered touch: pan\n        // eslint-disable-next-line no-lone-blocks\n        case 3: {\n          if ( this.enablePan === false ) return;\n\n          this.panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n          this.state = STATE.TOUCH_PAN;\n        } break;\n        default: {\n          this.state = STATE.NONE;\n        }\n      }\n\n      if ( this.state !== STATE.NONE ) {\n        this.dispatchEvent( START_EVENT );\n      }\n    };\n\n    this.onTouchMove = ( event: any ) => {\n\n      if ( this.enabled === false ) return;\n      event.preventDefault();\n      event.stopPropagation();\n\n      switch ( event.touches.length ) {\n        // one-fingered touch: rotate\n        // eslint-disable-next-line no-lone-blocks\n        case 1: {\n          if ( this.enableRotate === false ) return;\n          if ( this.state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n          this.rotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n          this.rotateDelta.subVectors( this.rotateEnd, this.rotateStart );\n\n          var element = this.domElement === document ? this.domElement.body : this.domElement;\n\n          // rotating across whole screen goes 360 degrees around\n          this.rotateLeft( 2 * Math.PI * this.rotateDelta.x / (element as any).clientWidth * this.rotateSpeed );\n\n          // rotating up and down along whole screen attempts to go 360, but limited to 180\n          this.rotateUp( 2 * Math.PI * this.rotateDelta.y / (element as any).clientHeight * this.rotateSpeed );\n\n          this.rotateStart.copy( this.rotateEnd );\n\n          this.update();\n        } break;\n        // two-fingered touch: dolly\n        // eslint-disable-next-line no-lone-blocks\n        case 2: {\n          if ( this.enableZoom === false ) return;\n          if ( this.state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n          //console.log( 'handleTouchMoveDolly' );\n          var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n          var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n          var distance = Math.sqrt( dx * dx + dy * dy );\n\n          this.dollyEnd.set( 0, distance );\n\n          this.dollyDelta.subVectors( this.dollyEnd, this.dollyStart );\n\n          if ( this.dollyDelta.y > 0 ) {\n            this.dollyOut( this.getZoomScale() );\n          } else if ( this.dollyDelta.y < 0 ) {\n            this.dollyIn( this.getZoomScale() );\n          }\n\n          this.dollyStart.copy( this.dollyEnd );\n          this.update();\n        } break;\n        // three-fingered touch: pan\n        // eslint-disable-next-line no-lone-blocks\n        case 3: {\n          if ( this.enablePan === false ) return;\n          if ( this.state !== STATE.TOUCH_PAN ) return; // is this needed?...\n          this.panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n          this.panDelta.subVectors( this.panEnd, this.panStart );\n          this.pan( this.panDelta.x, this.panDelta.y );\n          this.panStart.copy( this.panEnd );\n          this.update();\n        } break;\n        default: {\n          this.state = STATE.NONE;\n        }\n      }\n    };\n\n    this.onTouchEnd = ( event: Event ) => {\n\n      if ( this.enabled === false ) return;\n      this.dispatchEvent( END_EVENT );\n      this.state = STATE.NONE;\n    }\n\n    this.onContextMenu = (event) => {\n      event.preventDefault();\n    };\n\n    this.domElement.addEventListener( 'contextmenu', this.onContextMenu, false );\n\n    this.domElement.addEventListener( 'mousedown', this.onMouseDown, false );\n    this.domElement.addEventListener( 'wheel', this.onMouseWheel, false );\n\n    this.domElement.addEventListener( 'touchstart', this.onTouchStart, false );\n    this.domElement.addEventListener( 'touchend', this.onTouchEnd, false );\n    this.domElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\n    this.window.addEventListener( 'keydown', this.onKeyDown, false );\n\n    // force an update at start\n    this.update();\n  }\n\n  update () {\n    const position = this.object.position;\n    this.updateOffset.copy( position ).sub( this.target );\n\n    // rotate offset to \"y-axis-is-up\" space\n    this.updateOffset.applyQuaternion( this.updateQuat );\n\n    // angle from z-axis around y-axis\n    this.spherical.setFromVector3( this.updateOffset );\n\n    if ( this.autoRotate && this.state === STATE.NONE ) {\n      this.rotateLeft( this.getAutoRotationAngle() );\n    }\n\n    (this.spherical as any).theta += (this.sphericalDelta as any).theta;\n    (this.spherical as any).phi += (this.sphericalDelta as any).phi;\n\n    // restrict theta to be between desired limits\n    (this.spherical as (any) as any).theta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, (this.spherical as any).theta ) );\n\n    // restrict phi to be between desired limits\n    (this.spherical as any).phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, (this.spherical as any).phi ) );\n\n    this.spherical.makeSafe();\n\n    (this.spherical as any).radius *= this.scale;\n\n    // restrict radius to be between desired limits\n    (this.spherical as any).radius = Math.max( this.minDistance, Math.min( this.maxDistance, (this.spherical as any).radius ) );\n\n    // move target to panned location\n    this.target.add( this.panOffset );\n\n    this.updateOffset.setFromSpherical( this.spherical );\n\n    // rotate offset back to \"camera-up-vector-is-up\" space\n    this.updateOffset.applyQuaternion( this.updateQuatInverse );\n\n    position.copy( this.target ).add( this.updateOffset );\n\n    this.object.lookAt( this.target );\n\n    if ( this.enableDamping === true ) {\n\n      (this.sphericalDelta as any).theta *= ( 1 - this.dampingFactor );\n      (this.sphericalDelta as any).phi *= ( 1 - this.dampingFactor );\n\n    } else {\n\n      this.sphericalDelta.set( 0, 0, 0 );\n\n    }\n\n    this.scale = 1;\n    this.panOffset.set( 0, 0, 0 );\n\n    // update condition is:\n    // min(camera displacement, camera rotation in radians)^2 > EPS\n    // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n    if ( this.zoomChanged ||\n      this.updateLastPosition.distanceToSquared( this.object.position ) > EPS ||\n      8 * ( 1 - this.updateLastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\n      this.dispatchEvent( CHANGE_EVENT );\n      this.updateLastPosition.copy( this.object.position );\n      this.updateLastQuaternion.copy( this.object.quaternion );\n      this.zoomChanged = false;\n      return true;\n    }\n    return false;\n  }\n\n  panLeft( distance: number, objectMatrix: any ) {\n    this.panLeftV.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n    this.panLeftV.multiplyScalar( - distance );\n    this.panOffset.add( this.panLeftV );\n  }\n\n  panUp( distance: number, objectMatrix: any ) {\n    this.panUpV.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n    this.panUpV.multiplyScalar( distance );\n    this.panOffset.add( this.panUpV );\n  }\n\n  // deltaX and deltaY are in pixels; right and down are positive\n  pan( deltaX: number, deltaY: number ) {\n    const element = this.domElement === document ? this.domElement.body : this.domElement;\n\n    if ( this.object instanceof THREE.PerspectiveCamera ) {\n      // perspective\n      const position = this.object.position;\n      this.panInternalOffset.copy( position ).sub( this.target );\n      var targetDistance = this.panInternalOffset.length();\n\n      // half of the fov is center to top of screen\n      targetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n      // we actually don't use screenWidth, since perspective camera is fixed to screen height\n      this.panLeft( 2 * deltaX * targetDistance / (element as any).clientHeight, this.object.matrix );\n      this.panUp( 2 * deltaY * targetDistance / (element as any).clientHeight, this.object.matrix );\n    } else if ( this.object instanceof THREE.OrthographicCamera ) {\n      // orthographic\n      this.panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / (element as any).clientWidth, this.object.matrix );\n      this.panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / (element as any).clientHeight, this.object.matrix );\n    } else {\n      // camera neither orthographic nor perspective\n      console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n      this.enablePan = false;\n    }\n  }\n\n  dollyIn( dollyScale: any ) {\n    if ( this.object instanceof THREE.PerspectiveCamera ) {\n      this.scale /= dollyScale;\n    } else if ( this.object instanceof THREE.OrthographicCamera ) {\n      this.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n      this.object.updateProjectionMatrix();\n      this.zoomChanged = true;\n    } else {\n      console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n      this.enableZoom = false;\n    }\n  }\n\n  dollyOut( dollyScale: any ) {\n    if ( this.object instanceof THREE.PerspectiveCamera ) {\n      this.scale *= dollyScale;\n    } else if ( this.object instanceof THREE.OrthographicCamera ) {\n      this.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n      this.object.updateProjectionMatrix();\n      this.zoomChanged = true;\n    } else {\n      console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n      this.enableZoom = false;\n    }\n  }\n\n  getAutoRotationAngle() {\n    return 2 * Math.PI / 60 / 60 * this.autoRotateSpeed;\n  }\n\n  getZoomScale() {\n    return Math.pow( 0.95, this.zoomSpeed );\n  }\n\n  rotateLeft( angle: number ) {\n    (this.sphericalDelta as any).theta -= angle;\n  }\n\n  rotateUp( angle: number ) {\n    (this.sphericalDelta as any).phi -= angle;\n  }\n\n  getPolarAngle (): number {\n    return (this.spherical as any).phi;\n  }\n\n  getAzimuthalAngle (): number {\n    return (this.spherical as any).theta;\n  }\n\n  dispose (): void {\n    this.domElement.removeEventListener( 'contextmenu', this.onContextMenu, false );\n    this.domElement.removeEventListener( 'mousedown', this.onMouseDown, false );\n    this.domElement.removeEventListener( 'wheel', this.onMouseWheel, false );\n\n    this.domElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n    this.domElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n    this.domElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\n    document.removeEventListener( 'mousemove', this.onMouseMove, false );\n    document.removeEventListener( 'mouseup', this.onMouseUp, false );\n\n    this.window.removeEventListener( 'keydown', this.onKeyDown, false );\n    //this.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  }\n\n  reset (): void {\n    this.target.copy( this.target0 );\n    this.object.position.copy( this.position0 );\n    (this.object as any).zoom = this.zoom0;\n\n    (this.object as any).updateProjectionMatrix();\n    this.dispatchEvent( CHANGE_EVENT );\n\n    this.update();\n\n    this.state = STATE.NONE;\n  }\n\n  // backward compatibility\n  get center(): THREE.Vector3 {\n    console.warn('THREE.OrbitControls: .center has been renamed to .target');\n    return this.target;\n  }\n  get noZoom(): boolean {\n    console.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n    return ! this.enableZoom;\n  }\n\n  set noZoom( value: boolean ) {\n    console.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n    this.enableZoom = ! value;\n  }\n}\n\ninterface ThreeEvent extends Event {\n  clientX: number;\n  clientY: number;\n  deltaY: number;\n  button: THREE.MOUSE;\n  touches: Array<any>;\n  keyCode: number;\n}\n","module.exports = __webpack_public_path__ + \"static/media/land_ocean.b07dffb3.jpg\";","import React from 'react'\nimport * as THREE from 'three'\nimport { OrbitControls } from '../../common/orbitControls'\nimport Stats from 'stats.js'\nimport EarthImg from '../../assets/img/land_ocean.jpg'\n\nclass Canvas extends React.Component {\n  componentDidMount() {\n    main()\n  }\n  render() {\n    return (<div id=\"Canvas-Container\"></div>)\n  }\n}\n\nfunction main(): any {\n  const elementNode: any = document.getElementById('Canvas-Container')\n  let renderer = new THREE.WebGLRenderer()\n  renderer.setClearColor(0x333333)\n  renderer.setPixelRatio(window.devicePixelRatio)\n  renderer.setSize(window.innerWidth, window.innerHeight)\n  elementNode.appendChild(renderer.domElement)\n\n  // 场景\n  let Sence = new THREE.Scene()\n  // 透视相机\n  let camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 10000)\n  camera.position.z = 1\n\n  // 轨道控制器\n  let controls: any = new OrbitControls(camera, renderer.domElement)\n  controls.addEventListener('change', render)\n  controls.minDistance = 1\n  controls.maxDistance = 10\n  controls.enablePan = false\n\n  // 创建网格(mesh) 由模型(geometry)和材质(material)构成\n  const mesh: any = createMesh(EarthImg)\n  Sence.add(mesh)\n  controls.update()\n  controls.target.copy(mesh.position)\n\n  // 添加光源：环境光和点光源(平行光)\n  const ambi = new THREE.AmbientLight(0x404040) // 环境光\n  Sence.add(ambi)\n  let spotLight = new THREE.DirectionalLight(0xffffff) // 点光源\n  spotLight.position.set(550, 100, 550)\n  spotLight.intensity = 0.6\n  Sence.add(spotLight)\n\n  // 性能监控\n  let stats = new Stats()\n  stats.showPanel(1)\n  elementNode.appendChild(stats.dom)\n  \n  // 渲染\n  function render(): void {\n    renderer.render(Sence, camera)\n    stats.update()\n  }\n\n  function run(): void {\n    render()\n    requestAnimationFrame(run)\n  }\n\n  run()\n}\n\nfunction createMesh(url: string) {\n  let mesh = new THREE.Mesh()\n  const loader = new THREE.TextureLoader()\n  loader.load(\n    url,\n    function(texture) {\n      mesh.material = new THREE.MeshBasicMaterial({ map: texture })\n      mesh.material.side = THREE.DoubleSide\n      mesh.geometry = new THREE.SphereGeometry(1, 10, 10)\n    }\n  )\n  return mesh\n}\n\nexport default Canvas"],"sourceRoot":""}